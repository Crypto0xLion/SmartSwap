"use strict";(self.webpackChunksmardex_web=self.webpackChunksmardex_web||[]).push([[5932],{61158:function(e,a,n){n.d(a,{D:function(){return p}});var t=n(73773);const s={icon:t,id:1,name:"Ethereum",network:"homestead",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://eth-mainnet.g.alchemy.com/v2"],webSocket:["wss://eth-mainnet.g.alchemy.com/v2"]},infura:{http:["https://mainnet.infura.io/v3"],webSocket:["wss://mainnet.infura.io/ws/v3"]},default:{http:["https://rpc.ankr.com/eth","https://cloudflare-eth.com","https://ethereum.publicnode.com"]},public:{http:["https://rpc.ankr.com/eth","https://cloudflare-eth.com","https://ethereum.publicnode.com"]}},blockExplorers:{etherscan:{name:"Etherscan",url:"https://etherscan.io"},default:{name:"Etherscan",url:"https://etherscan.io"}},contracts:{ensRegistry:{address:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},ensUniversalResolver:{address:"0xE4Acdd618deED4e6d2f03b9bf62dc6118FC9A4da",blockCreated:16773775},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:14353601}},timeBetweenBlock:12,maxBlockDiffSeconds:300,sdId:"ethereum",cgId:"ethereum",whId:"ethereum",initCodeHash:"c762a0f9885cc92b9fd8eef224b75997682b634460611bc0f2138986e20b653f",SmardexToken:{address:"0x5de8ab7e27f6e7a1fff3e5b337584aa43961beef"},SmardexRouter:{address:"0xc33984abcae20f47a754ef78f6526fef266c0c6f"},SmardexRouterDeprecated:{address:"0x926c777c091a5a070dc24ac94ff498b5a556f92a"},FarmingRange:{address:"0x7d85c0905a6e1ab5837a0b57cd94a419d3a77523"},FarmingRangeV1:{address:"0xe74a7a544534da80fbac4d2475a6fdc03388154f"},FarmingRangeSponsor:{address:"0x7d85c0905a6e1ab5837a0b57cd94a419d3a77523"},Staking:{address:"0x80497049b005fd236591c3cd431dbd6e06eb1a31"},StakingV1:{address:"0xb940d63c2ded1184bbde059acc7fee93654f02bf"},WrappedNative:{address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},Factory:{address:"0xb878dc600550367e14220d4916ff678fb284214f"},RewardManager:{address:"0xc049c7fe5eaa024095861212bd8a8e8df88a2b1f"},RewardManagerV1:{address:"0x25c4b95f00a01d3739815f026c52126f44034837"},RewardManagerSponsor:{address:"0x40a8ee345887c7e92a24c3cd57a191d1b2d6f3cf"},OdosRouter:{address:"0xcf5540fffcdc3d510b18bfca6d2b9987b0772559"}};var r=n(49402);const i={icon:r,id:137,name:"Polygon",network:"matic",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:{alchemy:{http:["https://polygon-mainnet.g.alchemy.com/v2"],webSocket:["wss://polygon-mainnet.g.alchemy.com/v2"]},infura:{http:["https://polygon-mainnet.infura.io/v3"],webSocket:["wss://polygon-mainnet.infura.io/ws/v3"]},default:{http:["https://polygon-rpc.com"]},public:{http:["https://polygon-rpc.com"]}},blockExplorers:{etherscan:{name:"PolygonScan",url:"https://polygonscan.com"},default:{name:"PolygonScan",url:"https://polygonscan.com"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:25770160}},timeBetweenBlock:2.2,maxBlockDiffSeconds:300,sdId:"polygon",cgId:"polygon-pos",whId:"polygon",initCodeHash:"33bee911475f015247aeb1eebe149d1c6d2669be54126c29d85df6b0abb4c4e9",SmardexToken:{address:"0x6899face15c14348e1759371049ab64a3a06bfa6"},SmardexRouter:{address:"0xedd758d17175dc9131992ebd02f55cc4ebeb7b7c"},FarmingRange:{address:"0x7db73a1e526db36c40e508b09428420c1fa8e46b"},FarmingRangeSponsor:{address:"0x1bc47824ea7559d8112a6421a38f3c962065ad55"},WrappedNative:{address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"},Factory:{address:"0x9a1e1681f6d59ca051776410465afada6384398f"},RewardManager:{address:"0x391becc8daaf32b9ba8e602e9527bf9da04c8deb"},RewardManagerSponsor:{address:"0xab3699b71e89a53c529ec037c3389b5a2caf545a"},OdosRouter:{address:"0x4e3288c9ca110bcc82bf38f09a7b425c095d92bf"}};var o=n(38565);const c={icon:o,id:42161,name:"Arbitrum One",network:"arbitrum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://arb-mainnet.g.alchemy.com/v2"],webSocket:["wss://arb-mainnet.g.alchemy.com/v2"]},infura:{http:["https://arbitrum-mainnet.infura.io/v3"],webSocket:["wss://arbitrum-mainnet.infura.io/ws/v3"]},default:{http:["https://arb1.arbitrum.io/rpc"]},public:{http:["https://arb1.arbitrum.io/rpc"]}},blockExplorers:{etherscan:{name:"Arbiscan",url:"https://arbiscan.io"},default:{name:"Arbiscan",url:"https://arbiscan.io"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:7654707}},timeBetweenBlock:.25,maxBlockDiffSeconds:300,sdId:"arbitrum",cgId:"arbitrum-one",whId:"arbitrum",initCodeHash:"33bee911475f015247aeb1eebe149d1c6d2669be54126c29d85df6b0abb4c4e9",SmardexToken:{address:"0xabd587f2607542723b17f14d00d99b987c29b074"},SmardexRouter:{address:"0xda3970a20cdc2b1269fc96c4e8d300e0fddb7b3d"},FarmingRange:{address:"0x53d165df0414bd02e91747775450934bf2257f69"},FarmingRangeSponsor:{address:"0x6ad123212799cbd589761ec4bf690999c4bd8df9"},WrappedNative:{address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"},Factory:{address:"0x41a00e3fbe7f479a99ba6822704d9c5deb611f22"},RewardManager:{address:"0x5c622dcc96b6d96ac6c154f99cf081815094cbc9"},RewardManagerSponsor:{address:"0x863799a120edd11ca8718a3a93f1beb138a97c41"},OdosRouter:{address:"0xa669e7a0d4b3e4fa48af2de86bd4cd7126be4e13"}};var d=n(83279);const l={icon:d,id:56,name:"BNB Smart Chain",network:"bsc",nativeCurrency:{decimals:18,name:"BNB",symbol:"BNB"},rpcUrls:{ankr:{http:["https://rpc.ankr.com/bsc"],webSocket:["wss://rpc.ankr.com/bsc/ws"]},quicknode:{http:["https://withered-solemn-leaf.bsc.quiknode.pro/d3c2cf03d145f124cd6e37dcfa06329c9a9f3431"],webSocket:["wss://withered-solemn-leaf.bsc.quiknode.pro/d3c2cf03d145f124cd6e37dcfa06329c9a9f3431"]},default:{http:["https://bsc-dataseed1.binance.org","https://bsc-dataseed2.binance.org","https://bsc-dataseed3.binance.org","https://bsc-dataseed4.binance.org","https://rpc.ankr.com/bsc"]},public:{http:["https://bsc-dataseed1.binance.org","https://bsc-dataseed2.binance.org","https://bsc-dataseed3.binance.org","https://bsc-dataseed4.binance.org","https://rpc.ankr.com/bsc"]}},blockExplorers:{etherscan:{name:"BscScan",url:"https://bscscan.com"},default:{name:"BscScan",url:"https://bscscan.com"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:15921452}},timeBetweenBlock:3,maxBlockDiffSeconds:300,sdId:"bsc",cgId:"binance-smart-chain",whId:"bsc",initCodeHash:"33bee911475f015247aeb1eebe149d1c6d2669be54126c29d85df6b0abb4c4e9",SmardexToken:{address:"0xfdc66a08b0d0dc44c17bbd471b88f49f50cdd20f"},SmardexRouter:{address:"0xab3699b71e89a53c529ec037c3389b5a2caf545a"},FarmingRange:{address:"0xb891Aeb2130805171796644a2af76Fc7Ff25a0b9"},FarmingRangeSponsor:{address:"0x0a06db823d8f1919dd3318b4f80f2ddae7132677"},WrappedNative:{address:"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"},Factory:{address:"0xa8ef6fea013034e62e2c4a9ec1cdb059fe23af33"},RewardManager:{address:"0x8ef71fDe0681f567d241A2Cb7f2aE46d6D709D30"},RewardManagerSponsor:{address:"0xde0ceb9fca050f30f07a7187beffbbbe6a04055a"},OdosRouter:{address:"0x89b8aa89fdd0507a99d334cbe3c808fafc7d850e"}};var m=n(41885);const p=[s,i,c,l,{icon:m,id:8453,name:"Base",network:"base",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://base-mainnet.g.alchemy.com/v2"],webSocket:["wss://base-mainnet.g.alchemy.com/v2"]},ankr:{http:["https://rpc.ankr.com/base"],webSocket:["wss://rpc.ankr.com/base/ws"]},quicknode:{http:["https://aged-dark-patron.base-mainnet.quiknode.pro/662e2f6303aeb06fa42c9090e58963a0bbfb317e"],webSocket:["wss://aged-dark-patron.base-mainnet.quiknode.pro/662e2f6303aeb06fa42c9090e58963a0bbfb317e"]},default:{http:["https://base.publicnode.com","https://mainnet.base.org"]},public:{http:["https://base.publicnode.com","https://mainnet.base.org"]}},blockExplorers:{etherscan:{name:"Basescan",url:"https://basescan.org"},default:{name:"Basescan",url:"https://basescan.org"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:5022}},timeBetweenBlock:2,maxBlockDiffSeconds:300,sdId:"base",cgId:"base",whId:"base",initCodeHash:"33bee911475f015247aeb1eebe149d1c6d2669be54126c29d85df6b0abb4c4e9",SmardexToken:{address:"0xfd4330b0312fdeec6d4225075b82e00493ff2e3f"},SmardexRouter:{address:"0xf03d133627364e5eddab8134fab3a030cf7b3020"},FarmingRange:{address:"0xa5d378c05192e3f1f365d6298921879c4d51c5a3"},FarmingRangeSponsor:{address:"0xb066706091d56fe94ac570826ba64686e844f9d8"},WrappedNative:{address:"0x4200000000000000000000000000000000000006"},Factory:{address:"0xdd4536dd9636564d891c919416880a3e250f975a"},RewardManager:{address:"0xd978bb7a7ae5b01116d1bd714fedd1b77ca9e75b"},RewardManagerSponsor:{address:"0xccfdbee02f8216e4f4da392a54e425285613cf2c"},OdosRouter:{address:"0x19ceead7105607cd444f5ad10dd51356436095a1"}}]},47566:function(e,a,n){function t(e){let{apiKey:a}=e;return function(e){const n=e.rpcUrls.ankr?.http[0],t=e.rpcUrls.ankr?.webSocket?.[0];return n?{chain:{...e,rpcUrls:{...e.rpcUrls,default:{http:[`${n}/${a}`]}}},rpcUrls:{http:[`${n}/${a}`],webSocket:[`${t}/${a}`]}}:null}}n.d(a,{n:function(){return t}})},61016:function(e,a,n){function t(){return function(e){const a=e.rpcUrls.quicknode?.http[0],n=e.rpcUrls.quicknode?.webSocket?.[0];return a?{chain:{...e,rpcUrls:{...e.rpcUrls,default:{http:[`${a}`]}}},rpcUrls:{http:[`${a}`],webSocket:[`${n}`]}}:null}}n.d(a,{_:function(){return t}})},84296:function(e,a,n){n.d(a,{o:function(){return I}});var t=n(36874),s=n(40036),r=n(26091),i=n(20869),o=n(16005),c=n(97977),d=n(41177),l=n(65128),m=n(50083),p=n(23570),g=n(90164),u=n(24889),f=n(52612),h=n(58903),k=n(6665),b=n(56126),w=n(61158);var v=n(78317),P=n(35691),S=n(188),y=n(83871);const I=(0,t.NY)()({state:function(){const e={},a={};return w.D.forEach((n=>{let{whId:t}=n;const r=s.qE.MAINNET[(0,s.wp)(t)];r.token_bridge&&r.core&&(e[t]=r.token_bridge.toLowerCase(),a[t]=r.core.toLowerCase())})),{transactions:[],tokenBridgeAddresses:e,coreAddresses:a}}(),reducers:{setTransactions(e,a){return{...e,transactions:[...a]}}},effects(e){return{async getLimits(e,a){const{fromChain:n,amount:t}=e,r=a.network.chains[0],i=["https://wormhole-v2-mainnet-api.certus.one","https://wormhole.inotel.ro","https://wormhole-v2-mainnet-api.mcf.rocks","https://wormhole-v2-mainnet-api.chainlayer.network","https://wormhole-v2-mainnet-api.staking.fund"],[o,c]=await Promise.all([fetch(`${i[0]}/v1/governor/available_notional_by_chain`).then((e=>e.json())).catch((()=>null)),fetch(`${i[0]}/v1/governor/token_list`).then((e=>e.json())).catch((()=>null))]),d=(0,s.I7)(n.whId),l=(0,s.I7)(r.whId),m=`0x${(0,f.tryNativeToHexString)(r.SmardexToken.address,r.whId)}`,p=o?.entries.filter((e=>e.chainId===d))[0],g=c?.entries.filter((e=>e.originChainId===l&&e.originAddress===m))[0];if(!p||!g)return{isLimitBreached:!1};let u=!1;const w=[],P=(0,h.f)(g.price.toString()),S=10n**BigInt(v.p8),y=S*(0,h.f)(p.remainingAvailableNotional)/P,I=S*(0,h.f)(p.notionalLimit)/P;t>=y&&(u=!0,w.push({message:`Breach of 24h Transfer Limit for the chain ${n.name} on Wormhole:`,limits:[`Available Limit is ${(0,b.bF)(parseFloat((0,k.d)(y)),2,2)} SMART`,`24h Total Limit is ${(0,b.bF)(parseFloat((0,k.d)(I)),2,2)} SMART`]}));const R=S*(0,h.f)(p.bigTransactionSize)/P;return t>=R&&(u=!0,w.push({message:`Breach of Maximum Transfer Size for chain ${n.name} on Wormhole:`,limits:[`Maximum Transfer Size is ${(0,b.bF)(parseFloat((0,k.d)(R)),2,2)} SMART`]})),{isLimitBreached:u,breachMessages:w}},async getTransactions(a,n){const t=(0,u.D0)().address,{network:d,bridge:l}=n,{tokenBridgeAddresses:m}=l,{chains:p}=d;if(!t)return;const g=(await y.V.fetchBridgeTransactions(t)).filter((e=>p.map((e=>e.whId)).includes((0,s.wp)(e.dc)))).map((e=>{const{sc:a,sa:n,dc:t,da:r,tx:i,aum:o,sq:c,ts:d}=e,l=p.find((e=>e.whId===(0,s.wp)(a))),m=p.find((e=>e.whId===(0,s.wp)(t)));return l&&m?{fromChain:l,toChain:m,fromAddress:n,toAddress:r,hash:i,amount:BigInt(o),sequence:c,status:"PENDING",timestamp:1e3*d}:null})).filter((e=>null!==e)),f=[],h=[],k=[];for(let e=0;e<g.length;e+=1){const a=g[e],{fromChain:n,sequence:t}=a,s=(0,r.Nz)(m[n.whId]),o=["https://wormhole-v2-mainnet-api.certus.one","https://wormhole.inotel.ro","https://wormhole-v2-mainnet-api.mcf.rocks","https://wormhole-v2-mainnet-api.chainlayer.network","https://wormhole-v2-mainnet-api.staking.fund"];h.push((0,i.R)(o[0],n.whId,s,t).catch((()=>null)))}const b=await Promise.all(h);for(let e=0;e<b.length;e+=1){const a=b[e],{toChain:n}=g[e];if(a){const e=(0,o.$)(a.vaaBytes),t=(0,u.uN)({address:m[n.whId],abi:S.y,chainId:n.id});k.push(t.read.isTransferCompleted([e]))}else k.push(Promise.resolve(null))}const w=await Promise.all(k);for(let e=0;e<g.length;e+=1){const a=g[e],n=b[e],t=w[e];if(n&&null!==t){const e=`0x${(0,c.dg)(n.vaaBytes)}`;f.push({...a,signedVAA:e,status:t?"COMPLETED":"PENDING"})}else f.push({...a,status:"FETCHING_VAA"})}e.bridge.setTransactions(f)},async getAllowance(e,a){const{id:n,whId:t,SmardexToken:s}=e,r=(0,u.D0)().address,{tokenBridgeAddresses:i}=a.bridge;if(!r)return 0n;const o=(0,u.uN)({address:s.address,abi:u.em,chainId:n});return await o.read.allowance([r,i[t]])||0n},async approve(a,n){const{onSuccess:t,onError:s}=a,{chain:r}=n.network,{tokenBridgeAddresses:i}=n.bridge;if(!r)return;const o="bridge-approve",{whId:c,SmardexToken:d}=r;await e.transactionQueue.push({name:"Approve SMART token",call:{address:d.address,abi:P.Z,functionName:"approve",args:[i[c],v.iD]},notifications:{info:{id:o,title:"Approving SMART token...",content:"Check your wallet",duration:1/0},success:{id:o,title:"Approve of SMART succeeded"},error:{id:o,title:"Approve of SMART failed"}},onSuccess:t,onError:s})},async transfer(a,n){const{toChain:t,toAddress:r,amount:i,onSuccess:o,onError:c}=a,{chain:l}=n.network,{tokenBridgeAddresses:m}=n.bridge;if(!l||!t||!r)return;const p="bridge-transfer",g=(0,f.tryNativeToHexString)(r,t.whId);await e.transactionQueue.push({name:"Transfer of SMART to Wormhole Bridge",call:{address:m[l.whId],abi:S.y,functionName:"transferTokens",args:[l.SmardexToken.address,i,(0,s.I7)(t.whId),`0x${g}`,0n,(0,d.r)().readUint8()]},notifications:{info:{id:p,title:"Transfer of SMART to Wormhole Bridge...",content:"Check your wallet",duration:1/0},success:{id:p,title:"Transfer of SMART succeeded"},error:{id:p,title:"Transfer of SMART failed"}},increaseGas:110n,onSuccess:o,onError:c})},async getSignedVAA(a,n){const{fromChain:t,receipt:s}=a,{coreAddresses:i,tokenBridgeAddresses:o}=n.bridge,d="bridge-transfer-signed-vaa";try{const a=(0,l.N_)(s,i[t.whId]),n=(0,r.Nz)(o[t.whId]),p=["https://wormhole-v2-mainnet-api.certus.one","https://wormhole.inotel.ro","https://wormhole-v2-mainnet-api.mcf.rocks","https://wormhole-v2-mainnet-api.chainlayer.network","https://wormhole-v2-mainnet-api.staking.fund"];e.notificationQueue.push({id:d,title:"Awaiting Signature...",content:"This can take several minutes",duration:1/0});const{vaaBytes:g}=await(0,m.v)(p,t.whId,n,a);return e.notificationQueue.push({type:"success",id:d,title:"Read of Signature succeeded",content:"Redeem is available"}),`0x${(0,c.dg)(g)}`}catch(a){e.notificationQueue.push({type:"error",id:d,title:"Read of Signature failed",content:a.cause?.details||a.shortMessage||"Please try again. The Transfer transaction is not a Sentia Bridge Transfer!",duration:1/0})}return null},async redeem(a,n){const{fromChain:t,signedVAA:s,onSuccess:r,onError:i}=a,{chain:o}=n.network,{tokenBridgeAddresses:c}=n.bridge;if(!t)return;const d="bridge-redeem";await e.transactionQueue.push({name:"Redeem of SMART from Wormhole Bridge",call:{address:c[o.whId],abi:S.y,functionName:"completeTransfer",args:[s]},notifications:{info:{id:d,title:"Redeem of SMART...",content:"Check your wallet",duration:1/0},success:{id:d,title:"Redeem of SMART succeeded"},error:{id:d,title:"Redeem of SMART failed"}},increaseGas:110n,onSuccess:r,onError:i})},async getTransferReceipt(a,n){const{fromChain:t,hash:s}=a,r="bridge-redeem-transfer-data";try{e.notificationQueue.push({id:r,title:"Reading Transfer transaction...",duration:1/0});const a=await(0,u.Mn)({chainId:t.id,hash:s});return e.notificationQueue.push({type:"success",id:r,title:"Read of Transfer transaction succeeded"}),a}catch(a){e.notificationQueue.push({type:"error",id:r,title:"Read of Transfer transaction failed",content:a.cause?.details||a.shortMessage||"Please try again. Check your network connection!",duration:1/0})}return null},getTransferData(e,a){const n=(0,c.GZ)(e.replace("0x","")),{network:t}=a,r=(0,p.k)(n),i=(0,g.Fo)(r.payload),o=(0,s.wp)(i.targetChain);return{toChain:t.chains.find((e=>e.whId===o)),amount:i.amount,toAddress:i.targetAddress}}}}})},16645:function(e,a,n){n.d(a,{B:function(){return c}});var t=n(36874),s=n(24889);var r=n(84918),i=n(78317),o=n(73849);const c=(0,t.NY)()({state:{},reducers:{setCampaign(e,a){return{...e,campaign:{...a}}}},effects(e){return{async getCampaign(a,n){const{network:t,token:c}=n,d=t.chains[0];if(!d)return;const{sdId:l}=d,m=d.FarmingRange.address,p=c.tokens[l].find((e=>e.address===d.SmardexToken.address));if(!p)return;const g=(0,s.uN)({address:m,abi:r.g,chainId:d.id}),{id:u,multiplier:f,walletAddress:h}=o[l],[k,b]=await Promise.all([g.read.pendingReward([BigInt(u),h]),e.token.getPrice({token:p,chain:d})]),w={id:u,multiplier:f,walletAddress:h,token:p,pendingRewards:{sdex:k,usd:k*b/i.CI}};e.communityRewards.setCampaign(w)}}}})},38166:function(e,a,n){n.d(a,{P:function(){return u}});var t=n(36874),s=n(60263),r=n(6665),i=n(24889),o=n(49547);var c=n(78317),d=n(13564),l=n(770),m=n(34387),p=n(84918),g=n(83871);const u=(0,t.NY)()({state:function(){const e={};return Object.keys(o).forEach((a=>{e[a]=o[a]})),{benchmarks:e}}(),reducers:{},effects(e){return{async getBenchmarkResults(a,n){const{benchmark:t,chain:i}=a,{sdId:o}=i,{name:c,date:d,token0:l,token1:m,pools:p}=t,[u,f]=await Promise.all([g.V.fetch(o,"volumes/volumes-lp.json").catch((()=>null)),g.V.fetchHPComparator(o,"feesAPR.json").catch((()=>null))]);if(!u||!f)return null;const h=[];for(let a=0;a<p.length;a+=1){const n=p[a],{type:t,uniV3PositionParams:o,txUrl:c,subtype:d}=n,g=parseFloat((0,s.b)(BigInt(n.initialAmount0),l.decimals)),k=parseFloat((0,s.b)(BigInt(n.initialAmount1),m.decimals)),b=parseFloat((0,r.d)(BigInt(n.farmingV1Rewards||"0")))||0,w=!!n.isFarmingV1,{computeSdexIL:v,computeUniV2IL:P,computeUniV3IL:S}=e.comparator;let y=null;switch(t){case"SMART":y=await v({chain:i,token0:l,token1:m,initialAmount0:g,initialAmount1:k,txUrl:c,farmingV1Rewards:b,isFarmingV1:w,volumes:u,feesAPR:f});break;case"UNIV2":y=await P({chain:i,token0:l,token1:m,initialAmount0:g,initialAmount1:k,txUrl:c});break;case"UNIV3":y=o?await S({chain:i,token0:l,token1:m,initialAmount0:g,initialAmount1:k,txUrl:c,params:o,subtype:d}):null}y&&h.push(y)}return{name:c,date:d,results:h}},async computeSdexIL(a,n){const{chain:t,token0:o,token1:d,initialAmount0:l,initialAmount1:g,txUrl:u,farmingV1Rewards:f,isFarmingV1:h,volumes:k,feesAPR:b}=a,{farming:w,farmingV1:v,token:P}=n,S=P.tokens[t.sdId].find((e=>e.address===t.SmardexToken.address));if(!(t&&k&&b&&S))return null;const y=e.pair.getAddress({tokens:[o,d],chain:t}),I=k[y]?.volumeUSD_all,R=b[y]?.feesAPRUSD,{FarmingRange:C,FarmingRangeV1:x}=t;if(!I||!R||!C||!x&&h)return null;const $=(0,i.uN)({address:y,abi:m.s,chainId:t.id}),[B,F]=await Promise.all([Promise.all([$.read.getReserves(),$.read.totalSupply(),$.read.balanceOf([c.ZB])]),e.token.getPrice({token:S,chain:t})]),[[T,L],N]=B;let[,,A]=B;const U=h?v.campaigns[t.sdId].find((e=>e.pairAddress.toLowerCase()===y.toLowerCase()))?.id:w.campaigns[t.sdId].find((e=>e.pairAddress.toLowerCase()===y.toLowerCase()))?.id;let D,E;if(U){const e=(0,i.uN)({address:h?x?.address:C.address,abi:p.g,chainId:t.id});[D,E]=await Promise.all([e.read.pendingReward([BigInt(U),c.ZB]),e.read.userInfo([BigInt(U),c.ZB])])}let V=0;D&&E&&([A]=E,V=parseFloat((0,r.d)(D))),V+=f;const M=parseFloat((0,s.b)(A*T/N,o.decimals)),Q=parseFloat((0,s.b)(A*L/N,d.decimals)),H=parseFloat(R),[_,G]=await Promise.all([e.token.getPrice({token:o,chain:t}),e.token.getPrice({token:d,chain:t})]),O=parseFloat((0,r.d)(_)),W=parseFloat((0,r.d)(G)),q=V*parseFloat((0,r.d)(F)),j=M*O+Q*W+q-1e3,X=j/1e3*100,Y=O*l+W*g,J=O*M+W*Q,z=(J-H-Y)/Y*100,Z=(J+q-Y)/Y*100,K={fees:H/Y*100,rewards:q/Y*100};return{type:"SMART",name:"Sentia",txUrl:u,token0:{...o,price:_},token1:{...d,price:G},initialAmount0:l,initialAmount1:g,amount0FeesIncluded:M,amount1FeesIncluded:Q,rewards:0,pnl:j,pnlPercent:X,value:z,valueRevenuesIncluded:Z,apr:K}},async computeUniV2IL(e,a){const{chain:n,token0:t,token1:s,initialAmount0:i,initialAmount1:o,txUrl:c}=e;if(!n)return null;const[{amount0:l,amount1:m},p,g]=await Promise.all([d.J.getPosition(t,s,n),d.J.getPrice(t,n),d.J.getPrice(s,n)]),u=parseFloat((0,r.d)(p)),f=parseFloat((0,r.d)(g)),h=l/m/(i/o),k=l*u+m*f-1e3,b=k/1e3*100,w=u*i+f*o,v=u*l+f*m,P=(v-w)/w*100,S=100*(2*Math.sqrt(h)/(1+h)-1),y={fees:100*Math.abs(2*Math.sqrt(h)/(1+h)-1-(v-w)/w),rewards:0};return{type:"UNIV2",name:"Uniswap V2",txUrl:c,token0:{...t,price:p},token1:{...s,price:g},initialAmount0:i,initialAmount1:o,amount0FeesIncluded:l,amount1FeesIncluded:m,rewards:0,pnl:k,pnlPercent:b,value:S,valueRevenuesIncluded:P,apr:y}},async computeUniV3IL(e,a){const{chain:n,token0:t,token1:s,initialAmount0:i,initialAmount1:o,txUrl:c,params:d,subtype:m}=e;if(!n)return null;const[{amount0:p,amount1:g,amount0Fee:u,amount1Fee:f},h,k]=await Promise.all([l.G.getPosition(t,s,n,d),l.G.getPrice(t,n,d),l.G.getPrice(s,n,d)]),b=parseFloat((0,r.d)(h)),w=parseFloat((0,r.d)(k)),v=p+u,P=g+f,S=v*b+P*w-1e3,y=S/1e3*100,I=b*i+w*o,R=(b*p+w*g-I)/I*100,C=(b*v+w*P-I)/I*100,x={fees:(u*b+f*w)/I*100,rewards:0};return{type:"UNIV3",name:`Uniswap V3 ${m?`${m} `:""}${d.fee/1e4}%`,txUrl:c,token0:{...t,price:h},token1:{...s,price:k},initialAmount0:i,initialAmount1:o,amount0FeesIncluded:v,amount1FeesIncluded:P,rewards:0,pnl:S,pnlPercent:y,value:R,valueRevenuesIncluded:C,apr:x}}}}})},47927:function(e,a,n){n.d(a,{H:function(){return c}});var t=n(36874),s=n(24889);var r=n(84918),i=n(34387),o=n(78317);const c=(0,t.NY)()({state:{},reducers:{setCampaign(e,a){const{campaign:n,v1:t}=a;return{...e,[t?"campaignV1":"campaign"]:{...n}}},setProcessingTransaction(e,a){return{...e,processingTransaction:a}}},effects(e){return{async getCampaign(a,n){const{campaignId:t,v1:c}=a,{network:d,token:l}=n,{chain:m}=d,{address:p}=(0,s.D0)();if(!m||!p)return;const{sdId:g}=m,{campaigns:u}=c?n.farmingV1:n.farming,f=c?m.FarmingRangeV1?.address:m.FarmingRange.address,h=l.tokens[g].find((e=>e.address===m.SmardexToken.address));if(!h||!f)return;const k=u[g].find((e=>e.id===t));if(!k)return;const b=(0,s.uN)({address:f,abi:r.g,chainId:m.id}),{token0:w,token1:v,pairAddress:P}=k,S=(0,s.uN)({address:P,abi:i.s,chainId:m.id}),[y,[I,R],[C,x],$,B,F,T,L,N]=await Promise.all([b.read.pendingReward([BigInt(t),p]),b.read.userInfo([BigInt(t),p]),S.read.getReserves(),S.read.totalSupply(),S.read.balanceOf([p]),S.read.allowance([p,b.address]),e.token.getPrice(w),e.token.getPrice(v),e.token.getPrice(h)]),A=C*10n**BigInt(o.p8-w.decimals)*T,U=x*10n**BigInt(o.p8-v.decimals)*L,D=$<=0n?0n:(A+U)/$,E={...k,balance:B,allowance:F,pairPrice:D,token0:{...k.token0,price:T},token1:{...k.token1,price:L},reserve0:C,reserve1:x,userInfo:{amount:{lp:I,usd:k.pairPrice*I/o.CI},rewardDept:R},pendingRewards:{sdex:y,usd:y*N/o.CI}};e.farmingMigration.setCampaign({campaign:E,v1:c})},async withdraw(a,n){const{campaign:t,amount:s,onSuccess:i}=a,{chain:o}=n.network,c=`${t.token0.symbol}-${t.token1.symbol}`,d=`withdraw-farming-migration-${c}-v1`;o&&o.FarmingRangeV1&&(e.farmingMigration.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Withdraw of ${c} LP`,call:{address:o.FarmingRangeV1.address,abi:r.g,functionName:"withdraw",args:[t.id,s]},notifications:{info:{id:d,title:`Withdrawing of ${c} LP...`,content:"Check your wallet",duration:1/0},success:{id:d,title:`Withdraw of ${c} LP succeeded`},error:{id:d,title:`Withdraw of ${c} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingMigration.getCampaign({campaignId:t.id,v1:!0}),e.farmingMigration.setProcessingTransaction(!1),await i()},onError:async()=>{e.farmingMigration.setProcessingTransaction(!1)}}))},async approve(a,n){const{campaign:t,amount:s,onSuccess:r}=a,{chain:o}=n.network,c=`${t.token0.symbol}-${t.token1.symbol}`,d=`approve-farming-migration-${c}`;o&&(e.farmingMigration.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Farming approval of ${c} LP`,call:{address:t.pairAddress,abi:i.s,functionName:"approve",args:[o.FarmingRange.address,s]},notifications:{info:{id:d,title:`Farming approval of ${c} LP...`,content:"Check your wallet",duration:1/0},success:{id:d,title:`Farming approval of ${c} LP succeeded`},error:{id:d,title:`Farming approval of ${c} LP failed`}},onSuccess:async()=>{await e.farmingMigration.getCampaign({campaignId:t.id}),e.farmingMigration.setProcessingTransaction(!1),await r()},onError:async()=>{e.farmingMigration.setProcessingTransaction(!1)}}))},async deposit(a,n){const{campaign:t,amount:s,onSuccess:i}=a,{chain:o}=n.network,c=`${t.token0.symbol}-${t.token1.symbol}`,d=`deposit-farming-migration-${c}`;o&&(e.farmingMigration.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Stake of ${c} LP`,call:{address:o.FarmingRange.address,abi:r.g,functionName:"deposit",args:[t.id,s]},notifications:{info:{id:d,title:`Staking of ${c} LP...`,content:"Check your wallet",duration:1/0},success:{id:d,title:`Stake of ${c} LP succeeded`},error:{id:d,title:`Stake of ${c} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingMigration.getCampaign({campaignId:t.id}),e.farmingMigration.setProcessingTransaction(!1),await i()},onError:async()=>{e.farmingMigration.setProcessingTransaction(!1)}}))}}}})},94500:function(e,a,n){n.d(a,{f:function(){return m}});var t=n(36874),s=n(24889);var r=n(84918),i=n(34387),o=n(78317),c=n(83871),d=n(13207),l=n(61158);const m=(0,t.NY)()({state:{campaigns:[]},reducers:{setCampaigns(e,a){return{...e,campaigns:[...a],lastUpdate:Date.now()}}},effects(e){return{async getCampaigns(a,n){const{lastUpdate:t}=n.farmingTop;if(t&&t>Date.now()-3e4)return void console.debug("[FARMING_TOP] call getCampaigns from cache");const s=await e.farmingTop.getCampaignsByModel("farming"),r=await e.farmingTop.getCampaignsByModel("farmingSponsor");if(s&&r){const a=[...s,...r].flat().sort(((e,a)=>(e.apr||0n)>(a.apr||0n)?-1:1)).slice(0,5);e.farmingTop.setCampaigns(a)}},async getCampaignsByModel(a,n){const{token:t}=n,r=n[a],m=[],p=[],g=[];for(let n=0;n<l.D.length;n+=1){const t=l.D[n],{sdId:s}=t,{campaigns:i}=r;t.Staking&&"farming"===a?m.push(i[s].filter((e=>0!==e.id)).map((e=>({...e,chain:t})))):m.push(i[s].map((e=>({...e,chain:t}))));const o=e.farmingTop.getFarmingContract({chain:t,model:a});if(!o)return null;const d=[],u=[],f=[];m[n].forEach((e=>{const a=BigInt(e.id);d.push(o.read.campaignInfo([a])),u.push(o.read.rewardInfoLen([a])),f.push(c.V.fetch(s,`pairs/pair-${e.token0.address}-${e.token1.address}.json`).catch((()=>null)))})),p.push(Promise.all([Promise.all(d),Promise.all(u),Promise.all(f)])),g.push(c.V.fetch(s,"volumes/volumes-lp.json").catch((()=>null)))}const[u,f]=await Promise.all([Promise.all(p),Promise.all(g)]),h=[];for(let n=0;n<l.D.length;n+=1){const t=l.D[n],s=m[n],[,r]=u[n],i=e.farmingTop.getFarmingContract({chain:t,model:a});if(!i)return null;const o=[];for(let e=0;e<r.length;e+=1){const a=s[e],n=r[e];o.push([]);for(let t=0;t<n;t+=1)o[e].push(i.read.campaignRewardInfo([BigInt(a.id),BigInt(t)]))}h.push(Promise.all(o.map((e=>Promise.all(e)))))}const k=await Promise.all(h),b=[],w=[],v=[];for(let a=0;a<l.D.length;a+=1){const n=l.D[a],[r]=u[a],o=m[a],c=k[a],d=t.tokens[n.sdId].find((e=>e.address===n.SmardexToken.address));if(!d)return null;v.push(e.token.getPrice({token:d,chain:n}));for(let e=0;e<r.length;e+=1){const[,,a,,,n]=r[e];o[e].startBlock=Number(a),o[e].totalStaked=n,o[e].rewards=c[e].map((e=>({endBlock:Number(e[0]),rewardPerBlock:e[1]}))).sort(((e,a)=>e.endBlock>a.endBlock?1:-1))}m[a]=o;const p=[],g=[];o.forEach((a=>{const{token0:t,token1:r,pairAddress:o}=a,c=(0,s.uN)({address:o,abi:i.s,chainId:n.id});p.push(Promise.all([c.read.getReserves(),c.read.totalSupply()])),g.push(Promise.all([e.token.getPrice({token:t,chain:n}),e.token.getPrice({token:r,chain:n})]))})),b.push(Promise.all(p)),w.push(Promise.all(g))}const[P,S,y]=await Promise.all([Promise.all(b),Promise.all(w),Promise.all(v)]),I=[];for(let e=0;e<l.D.length;e+=1)I.push((0,s.uV)({chainId:l.D[e].id}).getBlockNumber());const R=await Promise.all(I);for(let e=0;e<l.D.length;e+=1){const a=l.D[e],n=m[e],t=P[e],s=S[e],r=y[e],i=R[e],[,,c]=u[e],p=f[e];m[e]=n.map(((e,a)=>{const[n,r]=t[a],[i,c]=n;let{token0:d,token1:l}=e;d={...d,price:s[a][0]},l={...l,price:s[a][1]};const m=i*10n**BigInt(o.p8-d.decimals)*d.price,p=c*10n**BigInt(o.p8-l.decimals)*l.price,g=r<=0n?0n:(m+p)/r;return{...e,pairPrice:g,token0:d,token1:l,reserve0:i,reserve1:c,totalSupply:r,tvl:g*e.totalStaked/o.CI}}));const g=BigInt(Math.floor(86400*o.D1/a.timeBetweenBlock));m[e]=m[e].map(((e,n)=>{const{id:t,startBlock:s,rewards:l,pairPrice:m,totalStaked:u}=e;let f=0n,h=0n;if(i>s&&0!==l.length&&0n!==u){const{pairAddress:s,reserve0:k,reserve1:b}=e,w=p?.[s],v=c[n];for(let e=0;e<l.length;e+=1){const n=l[e];if(i<n.endBlock){if(f=n.rewardPerBlock*r*(a.Staking&&0===t?1n:o.CI)*g*100n/u/m,w&&v){const e=BigInt(v.flp),a=BigInt(o.p8),n=BigInt(o.D1),t=BigInt(o.NA);h=50n*(BigInt(w.volumeToken0_7d)*10n**a*(e*n)/d.o/k/t+BigInt(w.volumeToken1_7d)*10n**a*(e*n)/d.o/b/t)}break}}}return{...e,apr:f,aprLP:h}}))}return m},getFarmingContract(e,a){const{chain:n,model:t}=e,i=n["farming"===t?"FarmingRange":"FarmingRangeSponsor"];return i?(0,s.uN)({address:i.address,abi:r.g,chainId:n.id}):null}}}})},83848:function(e,a,n){n.d(a,{ZO:function(){return f},zg:function(){return k},jK:function(){return h}});var t=n(36874),s=n(36200),r=n(21657),i=n(51588);function o(e){const a={};let n;switch(e){case"farmingV1":n=r;break;case"farmingSponsor":n=i;break;default:n=s}return Object.keys(n).forEach((e=>{a[e]=n[e].map((e=>({...e,totalStaked:0n,totalSupply:0n,pairPrice:0n,startBlock:0,rewards:[]})))})),{campaigns:a,userCampaigns:{},lastUpdate:{}}}const c={setCampaigns(e,a){const{chain:n,campaigns:t}=a,{sdId:s}=n;return{...e,campaigns:{...e.campaigns,[s]:t},lastUpdate:{...e.lastUpdate,[s]:Date.now()}}},setUserCampaigns(e,a){const{chain:n,userCampaigns:t}=a;return{...e,userCampaigns:{...e.userCampaigns,[n.sdId]:t}}},setProcessingTransaction(e,a){return{...e,processingTransaction:a}}};var d=n(24889),l=n(78317),m=n(84918),p=n(34387),g=n(83871),u=n(13207);const f=(0,t.NY)()({state:o("farming"),reducers:c,effects:e=>({async getCampaigns(a,n){const{network:t,farming:s,token:r}=n,{chain:i}=t;if(!i)return;const{sdId:o}=i,{campaigns:c,lastUpdate:f}=s;if(f[o]&&f[o]>Date.now()-3e4)return void console.debug(`[FARMING:${o}] call getCampaigns from cache`);const h=r.tokens[o].find((e=>e.address===i.SmardexToken.address));if(!h)return;e.farming.resetCampaigns(void 0);const k=i.Staking?c[o].filter((e=>0!==e.id)):c[o],b=(0,d.uN)({address:i.FarmingRange.address,abi:m.g,chainId:i.id}),w=await g.V.fetch(o,"volumes/volumes-lp.json").catch((()=>null)),v=[],P=[],S=[];k.forEach((e=>{const a=BigInt(e.id);v.push(b.read.campaignInfo([a])),P.push(b.read.rewardInfoLen([a])),S.push(g.V.fetch(o,`pairs/pair-${e.token0.address}-${e.token1.address}.json`).catch((()=>null)))}));const[y,I,R]=await Promise.all([Promise.all(v),Promise.all(P),Promise.all(S)]),C=[];for(let e=0;e<I.length;e+=1){const a=k[e],n=I[e];C.push([]);for(let t=0;t<n;t+=1)C[e].push(b.read.campaignRewardInfo([BigInt(a.id),BigInt(t)]))}const x=await Promise.all(C.map((e=>Promise.all(e))));for(let e=0;e<y.length;e+=1){const[,,a,,,n]=y[e];k[e].startBlock=Number(a),k[e].totalStaked=n,k[e].rewards=x[e].map((e=>({endBlock:Number(e[0]),rewardPerBlock:e[1]}))).sort(((e,a)=>e.endBlock>a.endBlock?1:-1))}const $=[],B=[];k.forEach((a=>{const{token0:n,token1:t,pairAddress:s}=a,r=(0,d.uN)({address:s,abi:p.s,chainId:i.id});$.push(Promise.all([r.read.getReserves(),r.read.totalSupply()])),B.push(Promise.all([e.token.getPrice(n),e.token.getPrice(t)]))}));const[F,T,L]=await Promise.all([Promise.all($),Promise.all(B),e.token.getPrice(h)]),N=k.map(((e,a)=>{const[n,t]=F[a],[s,r]=n;let{token0:i,token1:o}=e;i={...i,price:T[a][0]},o={...o,price:T[a][1]};const c=s*10n**BigInt(l.p8-i.decimals)*i.price,d=r*10n**BigInt(l.p8-o.decimals)*o.price,m=t<=0n?0n:(c+d)/t;return{...e,pairPrice:m,token0:i,token1:o,reserve0:s,reserve1:r,totalSupply:t,tvl:m*e.totalStaked/l.CI}})),A=await(0,d.uV)({chainId:i.id}).getBlockNumber();if(!A)return;const U=BigInt(Math.floor(86400*l.D1/i.timeBetweenBlock)),D=N.map(((e,a)=>{const{id:n,startBlock:t,rewards:s,pairPrice:r,totalStaked:o}=e;let c=0n,d=0n;if(A>t&&0!==s.length&&0n!==r&&0n!==o){const{pairAddress:t,reserve0:m,reserve1:p}=e,g=w?.[t],f=R[a];for(let e=0;e<s.length;e+=1){const a=s[e];if(A<a.endBlock){if(c=a.rewardPerBlock*L*(i.Staking&&0===n?1n:l.CI)*U*100n/o/r,g&&f){const e=BigInt(f.flp),a=BigInt(l.p8),n=BigInt(l.D1),t=BigInt(l.NA);d=50n*(BigInt(g.volumeToken0_7d)*10n**a*(e*n)/u.o/m/t+BigInt(g.volumeToken1_7d)*10n**a*(e*n)/u.o/p/t)}break}}}return{...e,apr:c,aprLP:d}}));e.farming.setCampaigns({chain:i,campaigns:D})},async getUserCampaigns(a,n){const{network:t,farming:s,token:r}=n,{chain:i}=t,{address:o}=(0,d.D0)(),{campaigns:c}=s;if(!i||!o)return;const{sdId:g}=i,u=r.tokens[g].find((e=>e.address===i.SmardexToken.address));if(!u)return;const f=i.Staking?c[g].filter((e=>0!==e.id)):c[g],h=[],k=[],b=(0,d.uN)({address:i.FarmingRange.address,abi:m.g,chainId:i.id});f.forEach((e=>{const{pairAddress:a,id:n}=e,t=(0,d.uN)({address:a,abi:p.s,chainId:i.id});h.push(Promise.all([b.read.pendingReward([BigInt(n),o]),b.read.userInfo([BigInt(n),o])])),k.push(Promise.all([t.read.balanceOf([o]),t.read.allowance([o,b.address])]))}));const[w,v,P]=await Promise.all([Promise.all(h),Promise.all(k),e.token.getPrice(u)]),S=f.map(((e,a)=>{const[n,t]=w[a],[s,r]=v[a],[i,o]=t;return{campaignId:e.id,balance:s,allowance:r,userInfo:{amount:{lp:i,usd:e.pairPrice*i/l.CI},rewardDept:o},pendingRewards:{sdex:n,usd:n*P/l.CI}}}));e.farming.setUserCampaigns({chain:i,userCampaigns:S})},resetCampaigns(a,n){const{chain:t}=n.network;if(!t)return;const s=n.farming.campaigns[t.sdId].map((e=>({...e,totalStaked:0n,totalSupply:0n,pairPrice:0n,startBlock:0,rewards:[],apr:void 0,tvl:void 0})));e.farming.setCampaigns({chain:t,campaigns:s})},resetUserCampaigns(a,n){const{chain:t}=n.network;t&&e.farming.setUserCampaigns({chain:t,userCampaigns:[]})},async approve(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`approve-farming-${i}`;r&&(e.farming.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Farming approval of ${i} LP`,call:{address:t.pairAddress,abi:p.s,functionName:"approve",args:[r.FarmingRange.address,s]},notifications:{info:{id:o,title:`Farming approval of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Farming approval of ${i} LP succeeded`},error:{id:o,title:`Farming approval of ${i} LP failed`}},onSuccess:async()=>{await e.farming.getUserCampaigns(void 0),e.farming.setProcessingTransaction(!1)},onError:async()=>{e.farming.setProcessingTransaction(!1)}}))},async deposit(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`deposit-farming-${i}`;r&&(e.farming.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Stake of ${i} LP`,call:{address:r.FarmingRange.address,abi:m.g,functionName:"deposit",args:[t.id,s]},notifications:{info:{id:o,title:`Staking of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Stake of ${i} LP succeeded`},error:{id:o,title:`Stake of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farming.getUserCampaigns(void 0),e.farming.setProcessingTransaction(!1)},onError:async()=>{e.farming.setProcessingTransaction(!1)}}))},async withdraw(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`withdraw-farming-${i}`;r&&(e.farming.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Withdraw of ${i} LP`,call:{address:r.FarmingRange.address,abi:m.g,functionName:"withdraw",args:[t.id,s]},notifications:{info:{id:o,title:`Withdrawing of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Withdraw of ${i} LP succeeded`},error:{id:o,title:`Withdraw of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farming.getUserCampaigns(void 0),e.farming.setProcessingTransaction(!1)},onError:async()=>{e.farming.setProcessingTransaction(!1)}}))},async harvest(a,n){const{campaign:t}=a,{chain:s}=n.network,r=`${t.token0.symbol}-${t.token1.symbol}`,i=`harvest-farming-${r}`;s&&await e.transactionQueue.push({name:`Harvest of ${r} LP`,call:{address:s.FarmingRange.address,abi:m.g,functionName:"harvest",args:[[t.id]]},notifications:{info:{id:i,title:`Harvesting of ${r} LP...`,content:"Check your wallet",duration:1/0},success:{id:i,title:`Harvest of ${r} LP succeeded`},error:{id:i,title:`Harvest of ${r} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farming.getUserCampaigns(void 0)}})},async harvestAll(a,n){const{chain:t}=n.network,{userCampaigns:s}=n.farming,r="harvest-all-farming-all";t&&await e.transactionQueue.push({name:"Harvest all of farming",call:{address:t.FarmingRange.address,abi:m.g,functionName:"harvest",args:[s[t.sdId].filter((e=>e.pendingRewards.sdex>0n)).map((e=>e.campaignId))]},notifications:{info:{id:r,title:"Harvesting all of farming...",content:"Check your wallet",duration:1/0},success:{id:r,title:"Harvest all of farming succeeded"},error:{id:r,title:"Harvest all of farming failed"}},increaseGas:110n,onSuccess:async()=>{await e.farming.getUserCampaigns(void 0)}})}})}),h=(0,t.NY)()({state:o("farmingV1"),reducers:c,effects:e=>({async getCampaigns(a,n){const{network:t,farmingV1:s}=n,{chain:r}=t;if(!r||!r.FarmingRangeV1)return;const{sdId:i}=r,{campaigns:o,lastUpdate:c}=s;if(c[i]&&c[i]>Date.now()-3e4)return void console.debug(`[FARMINGv1:${i}] call getCampaigns from cache`);e.farmingV1.resetCampaigns(void 0);const g=r.StakingV1?o[i].filter((e=>0!==e.id)):o[i],u=(0,d.uN)({address:r.FarmingRangeV1.address,abi:m.g,chainId:r.id}),f=[];g.forEach((e=>{const a=BigInt(e.id);f.push(u.read.campaignInfo([a]))}));const h=await Promise.all(f);for(let e=0;e<h.length;e+=1){const[,,,,,a]=h[e];g[e].totalStaked=a}const k=[],b=[];g.forEach((a=>{const{token0:n,token1:t,pairAddress:s}=a,i=(0,d.uN)({address:s,abi:p.s,chainId:r.id});k.push(Promise.all([i.read.getReserves(),i.read.totalSupply()])),b.push(Promise.all([e.token.getPrice(n),e.token.getPrice(t)]))}));const[w,v]=await Promise.all([Promise.all(k),Promise.all(b)]),P=g.map(((e,a)=>{const[n,t]=w[a],[s,r]=n;let{token0:i,token1:o}=e;i={...i,price:v[a][0]},o={...o,price:v[a][1]};const c=s*10n**BigInt(l.p8-i.decimals)*i.price,d=r*10n**BigInt(l.p8-o.decimals)*o.price,m=t<=0n?0n:(c+d)/t;return{...e,pairPrice:m,token0:i,token1:o,reserve0:s,reserve1:r,totalSupply:t,tvl:m*e.totalStaked/l.CI,apr:0n,aprLP:0n}}));e.farmingV1.setCampaigns({chain:r,campaigns:P})},async getUserCampaigns(a,n){const{network:t,farmingV1:s,token:r}=n,{chain:i}=t,{address:o}=(0,d.D0)(),{campaigns:c}=s;if(!i||!i.FarmingRangeV1||!o)return;const{sdId:g}=i,u=r.tokens[g].find((e=>e.address===i.SmardexToken.address));if(!u)return;const f=i.StakingV1?c[g].filter((e=>0!==e.id)):c[g],h=[],k=[],b=(0,d.uN)({address:i.FarmingRangeV1.address,abi:m.g,chainId:i.id});f.forEach((e=>{const{pairAddress:a,id:n}=e,t=(0,d.uN)({address:a,abi:p.s,chainId:i.id});h.push(Promise.all([b.read.pendingReward([BigInt(n),o]),b.read.userInfo([BigInt(n),o])])),k.push(Promise.all([t.read.balanceOf([o]),t.read.allowance([o,b.address])]))}));const[w,v,P]=await Promise.all([Promise.all(h),Promise.all(k),e.token.getPrice(u)]),S=f.map(((e,a)=>{const[n,t]=w[a],[s,r]=v[a],[i,o]=t;return{campaignId:e.id,balance:s,allowance:r,userInfo:{amount:{lp:i,usd:e.pairPrice*i/l.CI},rewardDept:o},pendingRewards:{sdex:n,usd:n*P/l.CI}}}));e.farmingV1.setUserCampaigns({chain:i,userCampaigns:S})},resetCampaigns(a,n){const{chain:t}=n.network;if(!t)return;const s=n.farmingV1.campaigns[t.sdId].map((e=>({...e,totalStaked:0n,totalSupply:0n,pairPrice:0n,startBlock:0,rewards:[],apr:void 0,aprLP:void 0,tvl:void 0})));e.farmingV1.setCampaigns({chain:t,campaigns:s})},resetUserCampaigns(a,n){const{chain:t}=n.network;t&&e.farmingV1.setUserCampaigns({chain:t,userCampaigns:[]})},async approve(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`approve-farming-${i}-v1`;r&&r.FarmingRangeV1&&(e.farmingV1.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Farming approval of ${i} LP`,call:{address:t.pairAddress,abi:p.s,functionName:"approve",args:[r.FarmingRangeV1.address,s]},notifications:{info:{id:o,title:`Farming approval of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Farming approval of ${i} LP succeeded`},error:{id:o,title:`Farming approval of ${i} LP failed`}},onSuccess:async()=>{await e.farmingV1.getUserCampaigns(void 0),e.farmingV1.setProcessingTransaction(!1)},onError:async()=>{e.farmingV1.setProcessingTransaction(!1)}}))},async deposit(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`deposit-farming-${i}-v1`;r&&r.FarmingRangeV1&&(e.farmingV1.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Stake of ${i} LP`,call:{address:r.FarmingRangeV1.address,abi:m.g,functionName:"deposit",args:[t.id,s]},notifications:{info:{id:o,title:`Staking of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Stake of ${i} LP succeeded`},error:{id:o,title:`Stake of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingV1.getUserCampaigns(void 0),e.farmingV1.setProcessingTransaction(!1)},onError:async()=>{e.farmingV1.setProcessingTransaction(!1)}}))},async withdraw(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`withdraw-farming-${i}-v1`;r&&r.FarmingRangeV1&&(e.farmingV1.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Withdraw of ${i} LP`,call:{address:r.FarmingRangeV1.address,abi:m.g,functionName:"withdraw",args:[t.id,s]},notifications:{info:{id:o,title:`Withdrawing of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Withdraw of ${i} LP succeeded`},error:{id:o,title:`Withdraw of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingV1.getUserCampaigns(void 0),e.farmingV1.setProcessingTransaction(!1)},onError:async()=>{e.farmingV1.setProcessingTransaction(!1)}}))},async harvest(a,n){const{campaign:t}=a,{chain:s}=n.network,r=`${t.token0.symbol}-${t.token1.symbol}`,i=`harvest-farming-${r}-v1`;s&&s.FarmingRangeV1&&await e.transactionQueue.push({name:`Harvest of ${r} LP`,call:{address:s.FarmingRangeV1.address,abi:m.g,functionName:"harvest",args:[[t.id]]},notifications:{info:{id:i,title:`Harvesting of ${r} LP...`,content:"Check your wallet",duration:1/0},success:{id:i,title:`Harvest of ${r} LP succeeded`},error:{id:i,title:`Harvest of ${r} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingV1.getUserCampaigns(void 0)}})},async harvestAll(a,n){const{chain:t}=n.network,{userCampaigns:s}=n.farmingV1,r="harvest-all-farming-all-v1";t&&t.FarmingRangeV1&&await e.transactionQueue.push({name:"Harvest all of farming",call:{address:t.FarmingRangeV1.address,abi:m.g,functionName:"harvest",args:[s[t.sdId].filter((e=>e.pendingRewards.sdex>0n)).map((e=>e.campaignId))]},notifications:{info:{id:r,title:"Harvesting all of farming...",content:"Check your wallet",duration:1/0},success:{id:r,title:"Harvest all of farming succeeded"},error:{id:r,title:"Harvest all of farming failed"}},increaseGas:110n,onSuccess:async()=>{await e.farmingV1.getUserCampaigns(void 0)}})}})}),k=(0,t.NY)()({state:o("farmingSponsor"),reducers:c,effects:e=>({async getCampaigns(a,n){const{network:t,farmingSponsor:s,token:r}=n,{chain:i}=t;if(!i||!i.FarmingRangeSponsor)return;const{sdId:o}=i,{campaigns:c,lastUpdate:f}=s;if(f[o]&&f[o]>Date.now()-3e4)return void console.debug(`[FARMING:${o}] call getCampaigns from cache`);const h=r.tokens[o].find((e=>e.address===i.SmardexToken.address));if(!h)return;e.farmingSponsor.resetCampaigns(void 0);const k=c[o],b=(0,d.uN)({address:i.FarmingRangeSponsor.address,abi:m.g,chainId:i.id}),w=await g.V.fetch(o,"volumes/volumes-lp.json").catch((()=>null)),v=[],P=[],S=[];k.forEach((e=>{const a=BigInt(e.id);v.push(b.read.campaignInfo([a])),P.push(b.read.rewardInfoLen([a])),S.push(g.V.fetch(o,`pairs/pair-${e.token0.address}-${e.token1.address}.json`).catch((()=>null)))}));const[y,I,R]=await Promise.all([Promise.all(v),Promise.all(P),Promise.all(S)]),C=[];for(let e=0;e<I.length;e+=1){const a=k[e],n=I[e];C.push([]);for(let t=0;t<n;t+=1)C[e].push(b.read.campaignRewardInfo([BigInt(a.id),BigInt(t)]))}const x=await Promise.all(C.map((e=>Promise.all(e))));for(let e=0;e<y.length;e+=1){const[,,a,,,n]=y[e];k[e].startBlock=Number(a),k[e].totalStaked=n,k[e].rewards=x[e].map((e=>({endBlock:Number(e[0]),rewardPerBlock:e[1]}))).sort(((e,a)=>e.endBlock>a.endBlock?1:-1))}const $=[],B=[];k.forEach((a=>{const{token0:n,token1:t,pairAddress:s}=a,r=(0,d.uN)({address:s,abi:p.s,chainId:i.id});$.push(Promise.all([r.read.getReserves(),r.read.totalSupply()])),B.push(Promise.all([e.token.getPrice(n),e.token.getPrice(t)]))}));const[F,T,L]=await Promise.all([Promise.all($),Promise.all(B),e.token.getPrice(h)]),N=k.map(((e,a)=>{const[n,t]=F[a],[s,r]=n;let{token0:i,token1:o}=e;i={...i,price:T[a][0]},o={...o,price:T[a][1]};const c=s*10n**BigInt(l.p8-i.decimals)*i.price,d=r*10n**BigInt(l.p8-o.decimals)*o.price,m=t<=0n?0n:(c+d)/t;return{...e,pairPrice:m,token0:i,token1:o,reserve0:s,reserve1:r,totalSupply:t,tvl:m*e.totalStaked/l.CI}})),A=await(0,d.uV)({chainId:i.id}).getBlockNumber();if(!A)return;const U=BigInt(Math.floor(86400*l.D1/i.timeBetweenBlock)),D=N.map((e=>{const{startBlock:a,rewards:n,pairPrice:t,totalStaked:s}=e;let r=0n,i=0n;if(A>a&&0!==n.length&&0n!==t&&0n!==s)for(let a=0;a<n.length;a+=1){const o=n[a];if(A<o.endBlock){r=o.rewardPerBlock*L*l.CI*U*100n/s/t;const{pairAddress:n,reserve0:c,reserve1:d}=e,m=w?.[n],p=R[a];if(m&&p){const e=BigInt(p.flp),a=BigInt(l.p8),t=BigInt(l.D1),s=BigInt(l.NA);i=50n*(BigInt(w[n].volumeToken0_7d)*10n**a*(e*t)/u.o/c/s+BigInt(w[n].volumeToken1_7d)*10n**a*(e*t)/u.o/d/s)}break}}return{...e,apr:r,aprLP:i}}));e.farmingSponsor.setCampaigns({chain:i,campaigns:D})},async getUserCampaigns(a,n){const{network:t,farmingSponsor:s,token:r}=n,{chain:i}=t,{address:o}=(0,d.D0)(),{campaigns:c}=s;if(!i||!i.FarmingRangeSponsor||!o)return;const{sdId:g}=i,u=r.tokens[g].find((e=>e.address===i.SmardexToken.address));if(!u)return;const f=c[g],h=[],k=[],b=(0,d.uN)({address:i.FarmingRangeSponsor.address,abi:m.g,chainId:i.id});f.forEach((e=>{const{pairAddress:a,id:n}=e,t=(0,d.uN)({address:a,abi:p.s,chainId:i.id});h.push(Promise.all([b.read.pendingReward([BigInt(n),o]),b.read.userInfo([BigInt(n),o])])),k.push(Promise.all([t.read.balanceOf([o]),t.read.allowance([o,b.address])]))}));const[w,v,P]=await Promise.all([Promise.all(h),Promise.all(k),e.token.getPrice(u)]),S=f.map(((e,a)=>{const[n,t]=w[a],[s,r]=v[a],[i,o]=t;return{campaignId:e.id,balance:s,allowance:r,userInfo:{amount:{lp:i,usd:e.pairPrice*i/l.CI},rewardDept:o},pendingRewards:{sdex:n,usd:n*P/l.CI}}}));e.farmingSponsor.setUserCampaigns({chain:i,userCampaigns:S})},resetCampaigns(a,n){const{chain:t}=n.network;if(!t)return;const s=n.farmingSponsor.campaigns[t.sdId].map((e=>({...e,totalStaked:0n,totalSupply:0n,pairPrice:0n,startBlock:0,rewards:[],apr:void 0,tvl:void 0})));e.farmingSponsor.setCampaigns({chain:t,campaigns:s})},resetUserCampaigns(a,n){const{chain:t}=n.network;t&&e.farmingSponsor.setUserCampaigns({chain:t,userCampaigns:[]})},async approve(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`approve-farming-${i}`;r&&r.FarmingRangeSponsor&&(e.farmingSponsor.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Farming approval of ${i} LP`,call:{address:t.pairAddress,abi:p.s,functionName:"approve",args:[r.FarmingRangeSponsor.address,s]},notifications:{info:{id:o,title:`Farming approval of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Farming approval of ${i} LP succeeded`},error:{id:o,title:`Farming approval of ${i} LP failed`}},onSuccess:async()=>{await e.farmingSponsor.getUserCampaigns(void 0),e.farmingSponsor.setProcessingTransaction(!1)},onError:async()=>{e.farmingSponsor.setProcessingTransaction(!1)}}))},async deposit(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`deposit-farming-${i}`;r&&r.FarmingRangeSponsor&&(e.farmingSponsor.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Stake of ${i} LP`,call:{address:r.FarmingRangeSponsor.address,abi:m.g,functionName:"deposit",args:[t.id,s]},notifications:{info:{id:o,title:`Staking of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Stake of ${i} LP succeeded`},error:{id:o,title:`Stake of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingSponsor.getUserCampaigns(void 0),e.farmingSponsor.setProcessingTransaction(!1)},onError:async()=>{e.farmingSponsor.setProcessingTransaction(!1)}}))},async withdraw(a,n){const{campaign:t,amount:s}=a,{chain:r}=n.network,i=`${t.token0.symbol}-${t.token1.symbol}`,o=`withdraw-farming-${i}`;r&&r.FarmingRangeSponsor&&(e.farmingSponsor.setProcessingTransaction(!0),await e.transactionQueue.push({name:`Withdraw of ${i} LP`,call:{address:r.FarmingRangeSponsor.address,abi:m.g,functionName:"withdraw",args:[t.id,s]},notifications:{info:{id:o,title:`Withdrawing of ${i} LP...`,content:"Check your wallet",duration:1/0},success:{id:o,title:`Withdraw of ${i} LP succeeded`},error:{id:o,title:`Withdraw of ${i} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingSponsor.getUserCampaigns(void 0),e.farmingSponsor.setProcessingTransaction(!1)},onError:async()=>{e.farmingSponsor.setProcessingTransaction(!1)}}))},async harvest(a,n){const{campaign:t}=a,{chain:s}=n.network,r=`${t.token0.symbol}-${t.token1.symbol}`,i=`harvest-farming-${r}`;s&&s.FarmingRangeSponsor&&await e.transactionQueue.push({name:`Harvest of ${r} LP`,call:{address:s.FarmingRangeSponsor.address,abi:m.g,functionName:"harvest",args:[[t.id]]},notifications:{info:{id:i,title:`Harvesting of ${r} LP...`,content:"Check your wallet",duration:1/0},success:{id:i,title:`Harvest of ${r} LP succeeded`},error:{id:i,title:`Harvest of ${r} LP failed`}},increaseGas:110n,onSuccess:async()=>{await e.farmingSponsor.getUserCampaigns(void 0)}})},async harvestAll(a,n){const{chain:t}=n.network,{userCampaigns:s}=n.farmingSponsor,r="harvest-all-farming-all";t&&t.FarmingRangeSponsor&&await e.transactionQueue.push({name:"Harvest all of farming",call:{address:t.FarmingRangeSponsor.address,abi:m.g,functionName:"harvest",args:[s[t.sdId].filter((e=>e.pendingRewards.sdex>0n)).map((e=>e.campaignId))]},notifications:{info:{id:r,title:"Harvesting all of farming...",content:"Check your wallet",duration:1/0},success:{id:r,title:"Harvest all of farming succeeded"},error:{id:r,title:"Harvest all of farming failed"}},increaseGas:110n,onSuccess:async()=>{await e.farmingSponsor.getUserCampaigns(void 0)}})}})})},11514:function(e,a,n){n.d(a,{M:function(){return o}});var t=n(36874),s=n(65304);var r=n(61673),i=n(83871);const o=(0,t.NY)()({state:{tokens:s,simulations:[]},reducers:{updateSimulations(e,a){return{...e,simulations:[...a]}}},effects:e=>({async getSavedSimulations(a,n){const t=r.U.getItem("historic-explorer-simulations");if(t){const a=JSON.parse(t);e.historicExplorer.updateSimulations(a)}},async getPointers(a,n){const{token0:t,token1:s}=a,r="USDT"!==t.symbol?await i.V.fetchHP(`${t.symbol}_USDT.json`).catch((()=>null)):{firstPriceTimestamp:0,lastPriceTimestamp:32503679999},o="USDT"!==s.symbol?await i.V.fetchHP(`${s.symbol}_USDT.json`).catch((()=>null)):{firstPriceTimestamp:0,lastPriceTimestamp:32503679999};return r&&o?{firstPriceTimestamp:Math.max(r.firstPriceTimestamp,o.firstPriceTimestamp),lastPriceTimestamp:Math.min(r.lastPriceTimestamp,o.lastPriceTimestamp)}:(e.notificationQueue.push({id:"simulate-liquidity-get-pointers",title:`Requesting data for ${t.symbol}-${s.symbol} failed`,content:"Failed to fetch prices",type:"error"}),null)},removeSimulation(a,n){const t="historic-explorer-simulations",s=r.U.getItem(t);if(s){const n=JSON.parse(s).filter((e=>e.id!==a.id));r.U.setItem(t,JSON.stringify(n)),e.historicExplorer.updateSimulations(n)}},saveSimulation(a,n){const t="historic-explorer-simulations",s=r.U.getItem(t);if(s){const n=JSON.parse(s),i=n.findIndex((e=>e.id===a.id));-1===i?n.push(a):n[i]=a,r.U.setItem(t,JSON.stringify(n)),e.historicExplorer.updateSimulations(n)}else r.U.setItem(t,JSON.stringify([a])),e.historicExplorer.updateSimulations([a])},async addSimulation(a,n){const{token0:t,token1:s,onSuccess:r,onError:o}=a;let{startDate:c,endDate:d}=a;const l=`simulation-${t.symbol}-${s.symbol}-${c.getTime()}-${d.getTime()}`,m=`${t.symbol}-${s.symbol}`,p=`simulate-liquidity-${l}`,g={id:p,title:`Simulating IG / IL for ${m}...`,duration:1/0},u={id:p,title:`Simulating IG / IL for ${m} succeeded`},f={id:p,title:`Simulating IG / IL for ${m} failed`};e.notificationQueue.push({...g,content:"Fetching prices"});const h=await e.historicExplorer.getPointers({token0:t,token1:s});if(!h)return e.notificationQueue.push({...f,content:"Failed to fetch prices",type:"error"}),void(o&&await o());const k=new Date(1e3*h.firstPriceTimestamp),b=new Date(1e3*h.lastPriceTimestamp);c=c<k?k:c,d=d>b?b:d;let w=c.getFullYear(),v=c.getMonth()+1,P=c;const S="USDT"!==t.symbol?`${t.symbol}_USDT.json`:null,y="USDT"!==s.symbol?`${s.symbol}_USDT.json`:null,I={token0:[],token1:[]},R={token0:[],token1:[]};for(;P<d;)P=new Date(w,v,0),S&&R.token0.push(i.V.fetchHP(`${w}/${v}/${S}`)),y&&R.token1.push(i.V.fetchHP(`${w}/${v}/${y}`)),v=12===v?1:v+1,w=1===v?w+1:w;try{if(R.token0.length){const e=await Promise.all(R.token0);I.token0=e.flat(1)}else I.token0=[];if(R.token1.length){const e=await Promise.all(R.token1);I.token1=e.flat(1)}else I.token1=[]}catch(a){return e.notificationQueue.push({...f,content:"Failed to fetch prices",type:"error"}),void(o&&await o())}const C=Math.floor(c.getTime()/1e3),x=Math.floor(d.getTime()/1e3);if(I.token0=I.token0.filter((e=>e[0]>=C&&e[0]<=x)),I.token1=I.token1.filter((e=>e[0]>=C&&e[0]<=x)),I.token0.length+I.token1.length===0)return e.notificationQueue.push({...f,content:"Failed to retrieve prices from server",type:"error"}),void(o&&await o());if(S&&y&&I.token0.length!==I.token1.length&&(I.token0.length>I.token1.length?I.token0.filter((e=>!I.token1.map((e=>e[0])).includes(e[0]))):I.token1.length>I.token0.length&&I.token1.filter((e=>!I.token0.map((e=>e[0])).includes(e[0])))),S&&y&&I.token0.length!==I.token1.length)return e.notificationQueue.push({...f,content:"Error with prices retrieved from server",type:"error"}),void(o&&await o());e.notificationQueue.push({...g,type:"info",content:"Calculating IG / IL ..."});const $=[],B=Math.max(I.token0.length,I.token1.length);for(let e=0;e<B;e+=1)"USDT"===t.symbol?$.push([I.token1[e][0],1/I.token1[e][1]]):"USDT"===s.symbol?$.push(I.token0[e]):$.push([I.token0[e][0],I.token0[e][1]/I.token1[e][1]]);const F={token0:t,token1:s,startDate:c,endDate:d,time:[$[0][0]],price:[$[0][1]],token0Reserve:[1e7/$[0][1]],token1Reserve:[1e7],token0FictiveReserve:[5e6/$[0][1]],token1FictiveReserve:[5e6],token0OldFictiveReserve:[0],token1OldFictiveReserve:[0],tradesQuantities:[0],tradesPrices:[0],overExpo:[0],indiceExpo:[0],priceCalculated:[$[0][1]],IGSentia:[0],ILUniSwap:[0]};for(let e=1;e<$.length;e+=1)[F.time[e],F.price[e]]=$[e],F.overExpo[e]=F.token1Reserve[e-1]/F.token0Reserve[e-1]/F.price[e-1],F.price[e]>F.price[e-1]&&F.overExpo[e]>1?F.indiceExpo[e]=.5/F.overExpo[e]:F.price[e]<F.price[e-1]&&F.overExpo[e]<1?F.indiceExpo[e]=F.overExpo[e]/2:F.indiceExpo[e]=.5,F.token0OldFictiveReserve[e]=F.token0Reserve[e-1]*F.indiceExpo[e]/2+F.token1Reserve[e-1]/F.price[e-1]*F.indiceExpo[e]/2,F.token1OldFictiveReserve[e]=F.token0Reserve[e-1]*F.indiceExpo[e]*F.price[e-1]/2+F.token1Reserve[e-1]*F.indiceExpo[e]/2,F.tradesQuantities[e]=-Math.sqrt(F.token0OldFictiveReserve[e]*F.token1OldFictiveReserve[e]/F.price[e])+F.token0OldFictiveReserve[e]+1e-19,F.tradesPrices[e]=(F.token0OldFictiveReserve[e]*F.token1OldFictiveReserve[e]/(F.token0OldFictiveReserve[e]-F.tradesQuantities[e])-F.token1OldFictiveReserve[e])/F.tradesQuantities[e],F.token0FictiveReserve[e]=F.token0OldFictiveReserve[e]-F.tradesQuantities[e],F.token1FictiveReserve[e]=F.token1OldFictiveReserve[e]+F.tradesQuantities[e]*F.tradesPrices[e],F.token0Reserve[e]=F.token0Reserve[e-1]-F.tradesQuantities[e],F.token1Reserve[e]=F.token1Reserve[e-1]+F.tradesQuantities[e]*F.tradesPrices[e],F.priceCalculated[e]=F.token1FictiveReserve[e]/F.token0FictiveReserve[e],F.IGSentia[e]=(F.token0Reserve[e]*F.price[e]+F.token1Reserve[e]-(F.token0Reserve[0]*F.price[e]+F.token1Reserve[0]))/(F.token0Reserve[0]*F.price[e]+F.token1Reserve[0])*100,F.ILUniSwap[e]=100*(2*Math.sqrt(F.price[e]/F.price[0])/(1+F.price[e]/F.price[0])-1);const T=[];for(let e=0;e<F.time.length;e+=Math.floor(F.time.length/300)||1)T.push({timestamp:F.time[e],x_price:F.price[e],y_imp_loss_uniswap_percent:F.ILUniSwap[e],y_imp_loss_smardex_percent:F.IGSentia[e]});const L=F.time.length-1;T.push({timestamp:F.time[L],x_price:F.price[L],y_imp_loss_uniswap_percent:F.ILUniSwap[L],y_imp_loss_smardex_percent:F.IGSentia[L]});const N={id:l,token0:t,token1:s,startDate:c,endDate:d,IGSentia:F.IGSentia[L],ILUniSwap:F.ILUniSwap[L],chartData:T};e.historicExplorer.saveSimulation(N),e.notificationQueue.push({...u,type:"success",content:"IG / IL calculated!"}),r&&await r()}})})}}]);