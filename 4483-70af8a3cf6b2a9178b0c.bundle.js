(self.webpackChunksmardex_web=self.webpackChunksmardex_web||[]).push([[4483],{90652:function(e,t,n){"use strict";n.r(t),n.d(t,{TxGroup:function(){return c},assignGroupID:function(){return p},computeGroupID:function(){return u}});var r=n(93064),o=n(71569),s=n(7783),i=n(16139),a=n(67069);class c{constructor(e){if(this.name="Transaction group",this.tag=Buffer.from("TG"),e.length>16){const t=`${e.length.toString()} transactions grouped together but max group size is ${16..toString()}`;throw Error(t)}this.txGroupHashes=e}get_obj_for_encoding(){return{txlist:this.txGroupHashes}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);t.name="Transaction group",t.tag=Buffer.from("TG"),t.txGroupHashes=[];for(const n of e.txlist)t.txGroupHashes.push(Buffer.from(n));return t}toByte(){return s.encode(this.get_obj_for_encoding())}}function u(e){const t=[];for(const n of e){const e=r.instantiateTxnIfNeeded(n);t.push(e.rawTxID())}const n=new c(t),s=n.toByte(),i=Buffer.from(a.concatArrays(n.tag,s)),u=o.genericHash(i);return Buffer.from(u)}function p(e,t){const n=u(e),o=[];for(const s of e){const e=r.instantiateTxnIfNeeded(s);t&&i.encodeAddress(e.from.publicKey)!==t||(e.group=n,o.push(e))}return o}t.default=c},14483:function(e,t,n){"use strict";n.r(t);var r=n(95183),o={};for(var s in r)"default"!==s&&(o[s]=function(e){return r[e]}.bind(0,s));n.d(t,o),t.default=r},1425:function(e,t,n){"use strict";n.r(t),n.d(t,{checkByteConstBlock:function(){return f},checkIntConstBlock:function(){return m},checkProgram:function(){return d},checkPushByteOp:function(){return h},checkPushIntOp:function(){return A},langspecEvalMaxVersion:function(){return y},langspecLogicSigVersion:function(){return b},parseUvarint:function(){return a},readProgram:function(){return l}});var r=JSON.parse('{"z_":6,"BV":5,"AP":[{"Opcode":0,"Name":"err","Cost":1,"Size":1,"Doc":"Fail immediately.","Groups":["Flow Control"]},{"Opcode":1,"Name":"sha256","Args":"B","Returns":"B","Cost":35,"Size":1,"Doc":"SHA256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":2,"Name":"keccak256","Args":"B","Returns":"B","Cost":130,"Size":1,"Doc":"Keccak256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":3,"Name":"sha512_256","Args":"B","Returns":"B","Cost":45,"Size":1,"Doc":"SHA512_256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":4,"Name":"ed25519verify","Args":"BBB","Returns":"U","Cost":1900,"Size":1,"Doc":"for (data A, signature B, pubkey C) verify the signature of (\\"ProgData\\" || program_hash || data) against the pubkey => {0 or 1}","DocExtra":"The 32 byte public key is the last element on the stack, preceded by the 64 byte signature at the second-to-last element on the stack, preceded by the data which was signed at the third-to-last element on the stack.","Groups":["Arithmetic"]},{"Opcode":5,"Name":"ecdsa_verify","Args":"BBBBB","Returns":"U","Cost":1700,"Size":2,"Doc":"for (data A, signature B, C and pubkey D, E) verify the signature of the data against the pubkey => {0 or 1}","DocExtra":"The 32 byte Y-component of a public key is the last element on the stack, preceded by X-component of a pubkey, preceded by S and R components of a signature, preceded by the data that is fifth element on the stack. All values are big-endian encoded. The signed data must be 32 bytes long, and signatures in lower-S form are only accepted.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":6,"Name":"ecdsa_pk_decompress","Args":"B","Returns":"BB","Cost":650,"Size":2,"Doc":"decompress pubkey A into components X, Y","DocExtra":"The 33 byte public key in a compressed form to be decompressed into X and Y (top) components. All values are big-endian encoded.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":7,"Name":"ecdsa_pk_recover","Args":"BUBB","Returns":"BB","Cost":2000,"Size":2,"Doc":"for (data A, recovery id B, signature C, D) recover a public key","DocExtra":"S (top) and R elements of a signature, recovery id and data (bottom) are expected on the stack and used to deriver a public key. All values are big-endian encoded. The signed data must be 32 bytes long.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":8,"Name":"+","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A plus B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `addw`.","Groups":["Arithmetic"]},{"Opcode":9,"Name":"-","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A minus B. Fail if B > A.","Groups":["Arithmetic"]},{"Opcode":10,"Name":"/","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by B (truncated division). Fail if B == 0.","DocExtra":"`divmodw` is available to divide the two-element values produced by `mulw` and `addw`.","Groups":["Arithmetic"]},{"Opcode":11,"Name":"*","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `mulw`.","Groups":["Arithmetic"]},{"Opcode":12,"Name":"<","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":13,"Name":">","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":14,"Name":"<=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":15,"Name":">=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":16,"Name":"&&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero and B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":17,"Name":"||","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero or B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":18,"Name":"==","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":19,"Name":"!=","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is not equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":20,"Name":"!","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"A == 0 yields 1; else 0","Groups":["Arithmetic"]},{"Opcode":21,"Name":"len","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"yields length of byte value A","Groups":["Arithmetic"]},{"Opcode":22,"Name":"itob","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"converts uint64 A to big endian bytes","Groups":["Arithmetic"]},{"Opcode":23,"Name":"btoi","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"converts bytes A as big endian to uint64","DocExtra":"`btoi` fails if the input is longer than 8 bytes.","Groups":["Arithmetic"]},{"Opcode":24,"Name":"%","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A modulo B. Fail if B == 0.","Groups":["Arithmetic"]},{"Opcode":25,"Name":"|","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-or B","Groups":["Arithmetic"]},{"Opcode":26,"Name":"&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-and B","Groups":["Arithmetic"]},{"Opcode":27,"Name":"^","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-xor B","Groups":["Arithmetic"]},{"Opcode":28,"Name":"~","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"bitwise invert value A","Groups":["Arithmetic"]},{"Opcode":29,"Name":"mulw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A times B as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low","Groups":["Arithmetic"]},{"Opcode":30,"Name":"addw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A plus B as a 128-bit result. X is the carry-bit, Y is the low-order 64 bits.","Groups":["Arithmetic"]},{"Opcode":31,"Name":"divmodw","Args":"UUUU","Returns":"UUUU","Cost":20,"Size":1,"Doc":"W,X = (A,B / C,D); Y,Z = (A,B modulo C,D)","DocExtra":"The notation J,K indicates that two uint64 values J and K are interpreted as a uint128 value, with J as the high uint64 and K the low.","Groups":["Arithmetic"]},{"Opcode":32,"Name":"intcblock","Cost":1,"Size":0,"Doc":"prepare block of uint64 constants for use by intc","DocExtra":"`intcblock` loads following program bytes into an array of integer constants in the evaluator. These integer constants can be referred to by `intc` and `intc_*` which will push the value onto the stack. Subsequent calls to `intcblock` reset and replace the integer constants available to the script.","ImmediateNote":"{varuint length} [{varuint value}, ...]","Groups":["Loading Values"]},{"Opcode":33,"Name":"intc","Returns":"U","Cost":1,"Size":2,"Doc":"Ith constant from intcblock","ImmediateNote":"{uint8 int constant index}","Groups":["Loading Values"]},{"Opcode":34,"Name":"intc_0","Returns":"U","Cost":1,"Size":1,"Doc":"constant 0 from intcblock","Groups":["Loading Values"]},{"Opcode":35,"Name":"intc_1","Returns":"U","Cost":1,"Size":1,"Doc":"constant 1 from intcblock","Groups":["Loading Values"]},{"Opcode":36,"Name":"intc_2","Returns":"U","Cost":1,"Size":1,"Doc":"constant 2 from intcblock","Groups":["Loading Values"]},{"Opcode":37,"Name":"intc_3","Returns":"U","Cost":1,"Size":1,"Doc":"constant 3 from intcblock","Groups":["Loading Values"]},{"Opcode":38,"Name":"bytecblock","Cost":1,"Size":0,"Doc":"prepare block of byte-array constants for use by bytec","DocExtra":"`bytecblock` loads the following program bytes into an array of byte-array constants in the evaluator. These constants can be referred to by `bytec` and `bytec_*` which will push the value onto the stack. Subsequent calls to `bytecblock` reset and replace the bytes constants available to the script.","ImmediateNote":"{varuint length} [({varuint value length} bytes), ...]","Groups":["Loading Values"]},{"Opcode":39,"Name":"bytec","Returns":"B","Cost":1,"Size":2,"Doc":"Ith constant from bytecblock","ImmediateNote":"{uint8 byte constant index}","Groups":["Loading Values"]},{"Opcode":40,"Name":"bytec_0","Returns":"B","Cost":1,"Size":1,"Doc":"constant 0 from bytecblock","Groups":["Loading Values"]},{"Opcode":41,"Name":"bytec_1","Returns":"B","Cost":1,"Size":1,"Doc":"constant 1 from bytecblock","Groups":["Loading Values"]},{"Opcode":42,"Name":"bytec_2","Returns":"B","Cost":1,"Size":1,"Doc":"constant 2 from bytecblock","Groups":["Loading Values"]},{"Opcode":43,"Name":"bytec_3","Returns":"B","Cost":1,"Size":1,"Doc":"constant 3 from bytecblock","Groups":["Loading Values"]},{"Opcode":44,"Name":"arg","Returns":"B","Cost":1,"Size":2,"Doc":"Nth LogicSig argument","ImmediateNote":"{uint8 arg index N}","Groups":["Loading Values"]},{"Opcode":45,"Name":"arg_0","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 0","Groups":["Loading Values"]},{"Opcode":46,"Name":"arg_1","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 1","Groups":["Loading Values"]},{"Opcode":47,"Name":"arg_2","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 2","Groups":["Loading Values"]},{"Opcode":48,"Name":"arg_3","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 3","Groups":["Loading Values"]},{"Opcode":49,"Name":"txn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of current transaction","DocExtra":"FirstValidTime causes the program to fail. The field is reserved for future use.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":50,"Name":"global","Returns":".","Cost":1,"Size":2,"Doc":"global field F","ImmediateNote":"{uint8 global field index}","Groups":["Loading Values"]},{"Opcode":51,"Name":"gtxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If this transaction is _i_ in the group, `gtxn i field` is equivalent to `txn field`.","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":52,"Name":"load","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value. All scratch spaces are 0 at program start.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":53,"Name":"store","Args":".","Cost":1,"Size":2,"Doc":"store A to the Ith scratch space","ImmediateNote":"{uint8 position in scratch space to store to}","Groups":["Loading Values"]},{"Opcode":54,"Name":"txna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":55,"Name":"gtxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":56,"Name":"gtxns","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Ath transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If top of stack is _i_, `gtxns field` is equivalent to `gtxn _i_ field`. gtxns exists so that _i_ can be calculated, often based on the index of the current transaction.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":57,"Name":"gtxnsa","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":58,"Name":"gload","Returns":".","Cost":1,"Size":3,"Doc":"Ith scratch space value of the Tth transaction in the current group","DocExtra":"`gload` fails unless the requested transaction is an ApplicationCall and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index} {uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":59,"Name":"gloads","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value of the Ath transaction in the current group","DocExtra":"`gloads` fails unless the requested transaction is an ApplicationCall and A < GroupIndex.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":60,"Name":"gaid","Returns":"U","Cost":1,"Size":2,"Doc":"ID of the asset or application created in the Tth transaction of the current group","DocExtra":"`gaid` fails unless the requested transaction created an asset or application and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index}","Groups":["Loading Values"]},{"Opcode":61,"Name":"gaids","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"ID of the asset or application created in the Ath transaction of the current group","DocExtra":"`gaids` fails unless the requested transaction created an asset or application and A < GroupIndex.","Groups":["Loading Values"]},{"Opcode":62,"Name":"loads","Args":"U","Returns":".","Cost":1,"Size":1,"Doc":"Ath scratch space value.  All scratch spaces are 0 at program start.","Groups":["Loading Values"]},{"Opcode":63,"Name":"stores","Args":"U.","Cost":1,"Size":1,"Doc":"store B to the Ath scratch space","Groups":["Loading Values"]},{"Opcode":64,"Name":"bnz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is not zero","DocExtra":"The `bnz` instruction opcode 0x40 is followed by two immediate data bytes which are a high byte first and low byte second which together form a 16 bit offset which the instruction may branch to. For a bnz instruction at `pc`, if the last element of the stack is not zero then branch to instruction at `pc + 3 + N`, else proceed to next instruction at `pc + 3`. Branch targets must be aligned instructions. (e.g. Branching to the second byte of a 2 byte op will be rejected.) Starting at v4, the offset is treated as a signed 16 bit integer allowing for backward branches and looping. In prior version (v1 to v3), branch offsets are limited to forward branches only, 0-0x7fff.\\n\\nAt v2 it became allowed to branch to the end of the program exactly after the last instruction: bnz to byte N (with 0-indexing) was illegal for a TEAL program with N bytes before v2, and is legal after it. This change eliminates the need for a last instruction of no-op as a branch target at the end. (Branching beyond the end--in other words, to a byte larger than N--is still illegal and will cause the program to fail.)","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":65,"Name":"bz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is zero","DocExtra":"See `bnz` for details on how branches work. `bz` inverts the behavior of `bnz`.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":66,"Name":"b","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET","DocExtra":"See `bnz` for details on how branches work. `b` always jumps to the offset.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":67,"Name":"return","Args":"U","Cost":1,"Size":1,"Doc":"use A as success value; end","Groups":["Flow Control"]},{"Opcode":68,"Name":"assert","Args":"U","Cost":1,"Size":1,"Doc":"immediately fail unless A is a non-zero number","Groups":["Flow Control"]},{"Opcode":72,"Name":"pop","Args":".","Cost":1,"Size":1,"Doc":"discard A","Groups":["Flow Control"]},{"Opcode":73,"Name":"dup","Args":".","Returns":"..","Cost":1,"Size":1,"Doc":"duplicate A","Groups":["Flow Control"]},{"Opcode":74,"Name":"dup2","Args":"..","Returns":"....","Cost":1,"Size":1,"Doc":"duplicate A and B","Groups":["Flow Control"]},{"Opcode":75,"Name":"dig","Args":".","Returns":"..","Cost":1,"Size":2,"Doc":"Nth value from the top of the stack. dig 0 is equivalent to dup","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":76,"Name":"swap","Args":"..","Returns":"..","Cost":1,"Size":1,"Doc":"swaps A and B on stack","Groups":["Flow Control"]},{"Opcode":77,"Name":"select","Args":"..U","Returns":".","Cost":1,"Size":1,"Doc":"selects one of two values based on top-of-stack: B if C != 0, else A","Groups":["Flow Control"]},{"Opcode":78,"Name":"cover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove top of stack, and place it deeper in the stack such that N elements are above it. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":79,"Name":"uncover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove the value at depth N in the stack and shift above items down so the Nth deep value is on top of the stack. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":80,"Name":"concat","Args":"BB","Returns":"B","Cost":1,"Size":1,"Doc":"join A and B","DocExtra":"`concat` fails if the result would be greater than 4096 bytes.","Groups":["Arithmetic"]},{"Opcode":81,"Name":"substring","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including E. If E < S, or either is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 end position}","Groups":["Byte Array Manipulation"]},{"Opcode":82,"Name":"substring3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including C. If C < B, or either is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":83,"Name":"getbit","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"Bth bit of (byte-array or integer) A.","DocExtra":"see explanation of bit ordering in setbit","Groups":["Arithmetic"]},{"Opcode":84,"Name":"setbit","Args":".UU","Returns":".","Cost":1,"Size":1,"Doc":"Copy of (byte-array or integer) A, with the Bth bit set to (0 or 1) C","DocExtra":"When A is a uint64, index 0 is the least significant bit. Setting bit 3 to 1 on the integer 0 yields 8, or 2^3. When A is a byte array, index 0 is the leftmost bit of the leftmost byte. Setting bits 0 through 11 to 1 in a 4-byte-array of 0s yields the byte array 0xfff00000. Setting bit 3 to 1 on the 1-byte-array 0x00 yields the byte array 0x10.","Groups":["Arithmetic"]},{"Opcode":85,"Name":"getbyte","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"Bth byte of A, as an integer","Groups":["Arithmetic"]},{"Opcode":86,"Name":"setbyte","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"Copy of A with the Bth byte set to small integer (between 0..255) C","Groups":["Arithmetic"]},{"Opcode":87,"Name":"extract","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including S+L. If L is 0, then extract to the end of the string. If S or S+L is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 length}","Groups":["Byte Array Manipulation"]},{"Opcode":88,"Name":"extract3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including B+C. If B+C is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":89,"Name":"extract_uint16","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint16 formed from a range of big-endian bytes from A starting at B up to but not including B+2. If B+2 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":90,"Name":"extract_uint32","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint32 formed from a range of big-endian bytes from A starting at B up to but not including B+4. If B+4 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":91,"Name":"extract_uint64","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint64 formed from a range of big-endian bytes from A starting at B up to but not including B+8. If B+8 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":96,"Name":"balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get balance for account A, in microalgos. The balance is observed after the effects of previous transactions in the group, and after the fee for the current transaction is deducted.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":97,"Name":"app_opted_in","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"1 if account A is opted in to application B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: 1 if opted in and 0 otherwise.","Groups":["State Access"]},{"Opcode":98,"Name":"app_local_get","Args":".B","Returns":".","Cost":1,"Size":1,"Doc":"local state of the key B in the current application in account A","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":99,"Name":"app_local_get_ex","Args":".UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the local state of application B, key C in account A. Y is 1 if key existed, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":100,"Name":"app_global_get","Args":"B","Returns":".","Cost":1,"Size":1,"Doc":"global state of the key A in the current application","DocExtra":"params: state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":101,"Name":"app_global_get_ex","Args":"UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the global state of application A, key B. Y is 1 if key existed, else 0","DocExtra":"params: Txn.ForeignApps offset (or, since v4, an _available_ application id), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":102,"Name":"app_local_put","Args":".B.","Cost":1,"Size":1,"Doc":"write C to key B in account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key, value.","Groups":["State Access"]},{"Opcode":103,"Name":"app_global_put","Args":"B.","Cost":1,"Size":1,"Doc":"write B to key A in the global state of the current application","Groups":["State Access"]},{"Opcode":104,"Name":"app_local_del","Args":".B","Cost":1,"Size":1,"Doc":"delete key B from account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key.\\n\\nDeleting a key which is already absent has no effect on the application local state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":105,"Name":"app_global_del","Args":"B","Cost":1,"Size":1,"Doc":"delete key A from the global state of the current application","DocExtra":"params: state key.\\n\\nDeleting a key which is already absent has no effect on the application global state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":112,"Name":"asset_holding_get","Args":".U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetBalance","AssetFrozen"],"ArgEnumTypes":"UU","Doc":"X is field F from account A\'s holding of asset B. Y is 1 if A is opted into B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ address), asset id (or, since v4, a Txn.ForeignAssets offset). Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset holding field index}","Groups":["State Access"]},{"Opcode":113,"Name":"asset_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetTotal","AssetDecimals","AssetDefaultFrozen","AssetUnitName","AssetName","AssetURL","AssetMetadataHash","AssetManager","AssetReserve","AssetFreeze","AssetClawback","AssetCreator"],"ArgEnumTypes":"UUUBBBBBBBBB","Doc":"X is field F from asset A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignAssets offset (or, since v4, an _available_ asset id. Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset params field index}","Groups":["State Access"]},{"Opcode":114,"Name":"app_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AppApprovalProgram","AppClearStateProgram","AppGlobalNumUint","AppGlobalNumByteSlice","AppLocalNumUint","AppLocalNumByteSlice","AppExtraProgramPages","AppCreator","AppAddress"],"ArgEnumTypes":"BBUUUUUBB","Doc":"X is field F from app A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignApps offset or an _available_ app id. Return: did_exist flag (1 if the application existed and 0 otherwise), value.","ImmediateNote":"{uint8 app params field index}","Groups":["State Access"]},{"Opcode":115,"Name":"acct_params_get","Args":".","Returns":".U","Cost":1,"Size":2,"Doc":"X is field F from account A. Y is 1 if A owns positive algos, else 0","ImmediateNote":"{uint8 account params field index}","Groups":["State Access"]},{"Opcode":120,"Name":"min_balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get minimum required balance for account A, in microalgos. Required balance is affected by [ASA](https://developer.algorand.org/docs/features/asa/#assets-overview) and [App](https://developer.algorand.org/docs/features/asc1/stateful/#minimum-balance-requirement-for-a-smart-contract) usage. When creating or opting into an app, the minimum balance grows before the app code runs, therefore the increase is visible there. When deleting or closing out, the minimum balance decreases after the app executes.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":128,"Name":"pushbytes","Returns":"B","Cost":1,"Size":0,"Doc":"immediate BYTES","DocExtra":"pushbytes args are not added to the bytecblock during assembly processes","ImmediateNote":"{varuint length} {bytes}","Groups":["Loading Values"]},{"Opcode":129,"Name":"pushint","Returns":"U","Cost":1,"Size":0,"Doc":"immediate UINT","DocExtra":"pushint args are not added to the intcblock during assembly processes","ImmediateNote":"{varuint int}","Groups":["Loading Values"]},{"Opcode":136,"Name":"callsub","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET, saving the next instruction on the call stack","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":137,"Name":"retsub","Cost":1,"Size":1,"Doc":"pop the top instruction from the call stack and branch to it","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","Groups":["Flow Control"]},{"Opcode":144,"Name":"shl","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times 2^B, modulo 2^64","Groups":["Arithmetic"]},{"Opcode":145,"Name":"shr","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by 2^B","Groups":["Arithmetic"]},{"Opcode":146,"Name":"sqrt","Args":"U","Returns":"U","Cost":4,"Size":1,"Doc":"The largest integer I such that I^2 <= A","Groups":["Arithmetic"]},{"Opcode":147,"Name":"bitlen","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"The highest set bit in A. If A is a byte-array, it is interpreted as a big-endian unsigned integer. bitlen of 0 is 0, bitlen of 8 is 4","DocExtra":"bitlen interprets arrays as big-endian integers, unlike setbit/getbit","Groups":["Arithmetic"]},{"Opcode":148,"Name":"exp","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A raised to the Bth power. Fail if A == B == 0 and on overflow","Groups":["Arithmetic"]},{"Opcode":149,"Name":"expw","Args":"UU","Returns":"UU","Cost":10,"Size":1,"Doc":"A raised to the Bth power as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low. Fail if A == B == 0 or if the results exceeds 2^128-1","Groups":["Arithmetic"]},{"Opcode":150,"Name":"bsqrt","Args":"B","Returns":"B","Cost":40,"Size":1,"Doc":"The largest integer I such that I^2 <= A. A and I are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":151,"Name":"divw","Args":"UUU","Returns":"U","Cost":1,"Size":1,"Doc":"A,B / C. Fail if C == 0 or if result overflows.","DocExtra":"The notation A,B indicates that A and B are interpreted as a uint128 value, with A as the high uint64 and B the low.","Groups":["Arithmetic"]},{"Opcode":160,"Name":"b+","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A plus B. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":161,"Name":"b-","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A minus B. A and B are interpreted as big-endian unsigned integers. Fail on underflow.","Groups":["Byte Array Arithmetic"]},{"Opcode":162,"Name":"b/","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A divided by B (truncated division). A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":163,"Name":"b*","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A times B. A and B are interpreted as big-endian unsigned integers.","Groups":["Byte Array Arithmetic"]},{"Opcode":164,"Name":"b<","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":165,"Name":"b>","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":166,"Name":"b<=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":167,"Name":"b>=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":168,"Name":"b==","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":169,"Name":"b!=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"0 if A is equal to B, else 1. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":170,"Name":"b%","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A modulo B. A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":171,"Name":"b|","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-or B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":172,"Name":"b&","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-and B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":173,"Name":"b^","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-xor B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":174,"Name":"b~","Args":"B","Returns":"B","Cost":4,"Size":1,"Doc":"A with all bits inverted","Groups":["Byte Array Logic"]},{"Opcode":175,"Name":"bzero","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"zero filled byte-array of length A","Groups":["Loading Values"]},{"Opcode":176,"Name":"log","Args":"B","Cost":1,"Size":1,"Doc":"write A to log state of the current application","DocExtra":"`log` fails if called more than MaxLogCalls times in a program, or if the sum of logged bytes exceeds 1024 bytes.","Groups":["State Access"]},{"Opcode":177,"Name":"itxn_begin","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in a new transaction group","DocExtra":"`itxn_begin` initializes Sender to the application address; Fee to the minimum allowable, taking into account MinTxnFee and credit from overpaying in earlier transactions; FirstValid/LastValid to the values in the invoking transaction, and all other fields to zero or empty values.","Groups":["Inner Transactions"]},{"Opcode":178,"Name":"itxn_field","Args":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"set field F of the current inner transaction to A","DocExtra":"`itxn_field` fails if A is of the wrong type for F, including a byte array of the wrong size for use as an address when F is an address field. `itxn_field` also fails if A is an account, asset, or app that is not _available_, or an attempt is made extend an array field beyond the limit imposed by consensus parameters. (Addresses set into asset params of acfg transactions need not be _available_.)","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":179,"Name":"itxn_submit","Cost":1,"Size":1,"Doc":"execute the current inner transaction group. Fail if executing this group would exceed the inner transaction limit, or if any transaction in the group fails.","DocExtra":"`itxn_submit` resets the current transaction so that it can not be resubmitted. A new `itxn_begin` is required to prepare another inner transaction.","Groups":["Inner Transactions"]},{"Opcode":180,"Name":"itxn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":181,"Name":"itxna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":182,"Name":"itxn_next","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in the same transaction group","DocExtra":"`itxn_next` initializes the transaction exactly as `itxn_begin` does","Groups":["Inner Transactions"]},{"Opcode":183,"Name":"gitxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":184,"Name":"gitxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":192,"Name":"txnas","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":193,"Name":"gtxnas","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":194,"Name":"gtxnsas","Args":"UU","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Bth value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":195,"Name":"args","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"Ath LogicSig argument","Groups":["Loading Values"]},{"Opcode":196,"Name":"gloadss","Args":"UU","Returns":".","Cost":1,"Size":1,"Doc":"Bth scratch space value of the Ath transaction in the current group","Groups":["Loading Values"]},{"Opcode":197,"Name":"itxnas","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ath value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":198,"Name":"gitxnas","Args":"U","Returns":".","Cost":1,"Size":3,"Doc":"Ath value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]}]}');let o;const s=2e4,i=1e3;function a(e){let t=0,n=0;for(let r=0;r<e.length;r++){const o=e[r];if(o<128)return r>9||9===r&&o>1?[0,-(r+1)]:[t|o<<n,r+1];t+=(127&o)<<n,n+=7}return[0,0]}function c(e,t){let n=1;const r=a(e.slice(t+n)),o=r[0];let s=r[1];if(s<=0)throw new Error(`could not decode int const block size at pc=${t+n}`);const i=[];n+=s;for(let r=0;r<o;r++){if(t+n>=e.length)throw new Error("intcblock ran past end of program");let o;if([o,s]=a(e.slice(t+n)),s<=0)throw new Error(`could not decode int const[${r}] block size at pc=${t+n}`);i.push(o),n+=s}return[n,i]}function u(e,t){let n=1;const r=a(e.slice(t+n)),o=r[0];let s=r[1];if(s<=0)throw new Error(`could not decode []byte const block size at pc=${t+n}`);const i=[];n+=s;for(let r=0;r<o;r++){if(t+n>=e.length)throw new Error("bytecblock ran past end of program");let o;if([o,s]=a(e.slice(t+n)),s<=0)throw new Error(`could not decode []byte] const[${r}] block size at pc=${t+n}`);if(n+=s,t+n+o>e.length)throw new Error("bytecblock ran past end of program");const c=e.slice(t+n,t+n+o);i.push(c),n+=o}return[n,i]}function p(e,t){let n=1;const[r,o]=a(e.slice(t+n));if(o<=0)throw new Error(`could not decode push int const at pc=${t+n}`);return n+=o,[n,r]}function g(e,t){let n=1;const[r,o]=a(e.slice(t+n));if(o<=0)throw new Error(`could not decode push []byte const size at pc=${t+n}`);if(n+=o,t+n+r>e.length)throw new Error("pushbytes ran past end of program");const s=e.slice(t+n,t+n+r);return n+=r,[n,s]}function l(e,t){if(!e)throw new Error("empty program");if(void 0===t&&(t=[]),!Array.isArray(t))throw new Error("invalid arguments");const[n,l]=a(e);if(l<=0)throw new Error("version parsing error");if(n>r.z_)throw new Error("unsupported version");let d=0,{length:m}=e;for(const e of t)m+=e.length;if(m>i)throw new Error("program too long");if(!o){o={};for(const e of r.AP)o[e.Opcode]=e}let f=l,A=[],h=[];for(;f<e.length;){const t=o[e[f]];if(void 0===t)throw new Error("invalid instruction");d+=t.Cost;let n=t.Size;if(0===n)switch(t.Opcode){case 32:{let t;[n,t]=c(e,f),A=A.concat(t);break}case 38:{let t;[n,t]=u(e,f),h=h.concat(t);break}case 129:{let t;[n,t]=p(e,f),A.push(t);break}case 128:{let t;[n,t]=g(e,f),h.push(t);break}default:throw new Error("invalid instruction")}f+=n}if(n<4&&d>s)throw new Error("program too costly for version < 4. consider using v4.");return[A,h,!0]}function d(e,t){const[,,n]=l(e,t);return n}function m(e,t){const[n]=c(e,t);return n}function f(e,t){const[n]=u(e,t);return n}function A(e,t){const[n]=p(e,t);return n}function h(e,t){const[n]=g(e,t);return n}const y=r.z_,b=r.BV},51310:function(e,t,n){"use strict";n.d(t,{Y:function(){return o}});var r=n(7210);class o{constructor({version:e,sources:t,names:n,mappings:o}){if(this.version=e,this.sources=t,this.names=n,this.mappings=o,3!==this.version)throw new Error(`Only version 3 is supported, got ${this.version}`);if(void 0===this.mappings)throw new Error("mapping undefined, cannot build source map without `mapping`");const s=this.mappings.split(";").map((e=>{const t=r.J(e);if(t.length>2)return t[2]}));this.pcToLine={},this.lineToPc={};let i=0;for(const[e,t]of s.entries())void 0!==t&&(i+=t),i in this.lineToPc||(this.lineToPc[i]=[]),this.lineToPc[i].push(e),this.pcToLine[e]=i}getLineForPc(e){return this.pcToLine[e]}getPcsForLine(e){return this.lineToPc[e]}}},49469:function(e,t,n){const r=n(16139),o=n(7783),s=n(90652),i=n(1425),a=n(94386),c=n(71569),u=n(43219),p=n(93064);e.exports={DynamicFee:class{constructor(e,t,n,o,s,i){if(!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(n)||n<0)throw Error("firstValid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("lastValid must be a positive number and smaller than 2^53-1");if(void 0===s&&(s=r.ALGORAND_ZERO_ADDRESS_STRING),void 0===i){const e=c.randomBytes(32);i=Buffer.from(e).toString("base64")}const p=Buffer.from("ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ","base64"),g=[t,n,o,e,s,i],l=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS,u.valTypes.ADDRESS,u.valTypes.BASE64],d=u.inject(p,[5,6,7,11,44,76],g,l);this.programBytes=d;const m=new a.LogicSig(d,void 0);this.address=m.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getDynamicFeeTransactions:function(e,t,n,i){if(!t.verify(r.decodeAddress(e.from).publicKey))throw new Error("invalid signature");e.fee=i,e.fee<p.ALGORAND_MIN_TX_FEE&&(e.fee=p.ALGORAND_MIN_TX_FEE);const a=c.keyPairFromSecretKey(n),u=r.encodeAddress(a.publicKey),{lease:g}=e;delete e.lease;const l=new p.Transaction(e);l.addLease(g,i);const d={from:u,to:e.from,fee:i,amount:l.fee,firstRound:e.firstRound,lastRound:e.lastRound,genesisHash:e.genesisHash,type:"pay"},m=new p.Transaction(d);m.addLease(g,i);const f=s.assignGroupID([m,l],void 0),A=f[0],h=f[1],y={lsig:t.get_obj_for_encoding(),txn:h.get_obj_for_encoding()},b=A.signTxn(n),B=o.encode(y),S=new Uint8Array(b.length+B.length);return S.set(b),S.set(B,b.length),S},signDynamicFee:function(e,t,n){const o=i.readProgram(e,void 0),s=o[0],u=o[1],p=c.keyPairFromSecretKey(t),g={from:r.encodeAddress(p.publicKey),to:r.encodeAddress(u[0]),fee:0,amount:s[2],closeRemainderTo:r.encodeAddress(u[1]),firstRound:s[3],lastRound:s[4],genesisHash:n,type:"pay",lease:new Uint8Array(u[2])},l=new a.LogicSig(e,void 0);return l.sign(t),{txn:g,lsig:l}}}},17455:function(e,t,n){const r=n(72023),{keccak256:o}=n(91094),s=n(1425),i=n(94386),a=n(43219),c=n(93064);e.exports={HTLC:class{constructor(e,t,n,r,o,s){if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");let c="";if("sha256"===n)c="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==";else{if("keccak256"!==n)throw Error("hash function unrecognized");c="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA=="}if(32!==Buffer.from(r,"base64").length)throw Error("hash image must be 32 bytes");const u=Buffer.from(c,"base64"),p=[s,o,t,r,e],g=[a.valTypes.INT,a.valTypes.INT,a.valTypes.ADDRESS,a.valTypes.BASE64,a.valTypes.ADDRESS],l=a.inject(u,[3,6,10,42,76],p,g);this.programBytes=l;const d=new i.LogicSig(l,void 0);this.address=d.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},signTransactionWithHTLCUnlock:function(e,t,n){const a=Buffer.from(n,"base64"),u=s.readProgram(e,void 0),p=u[0],g=u[1][1],l=e[e.length-15];if(1===l){const e=r.create();e.update(a);if(!Buffer.from(e.hex(),"hex").equals(g))throw new Error("sha256 hash of preimage did not match stored contract hash")}else{if(2!==l)throw new Error("hash function in contract unrecognized");{const e=o.create();e.update(a);if(!Buffer.from(e.hex(),"hex").equals(g))throw new Error("keccak256 hash of preimage did not match stored contract hash")}}const d=[a],m=new i.LogicSig(e,d);delete t.to;const f=p[0],A=new c.Transaction(t);if(A.fee>f)throw new Error(`final fee of payment transaction${A.fee.toString()}greater than transaction max fee${f.toString()}`);return i.signLogicSigTransaction(t,m)}}},82637:function(e,t,n){const r=n(49469),o=n(17455),s=n(51117),i=n(82680),a=n(81360);e.exports={DynamicFee:r.DynamicFee,getDynamicFeeTransactions:r.getDynamicFeeTransactions,signDynamicFee:r.signDynamicFee,HTLC:o.HTLC,signTransactionWithHTLCUnlock:o.signTransactionWithHTLCUnlock,LimitOrder:s.LimitOrder,getSwapAssetsTransaction:s.getSwapAssetsTransaction,Split:i.Split,getSplitFundsTransaction:i.getSplitFundsTransaction,PeriodicPayment:a.PeriodicPayment,getPeriodicPaymentWithdrawalTransaction:a.getPeriodicPaymentWithdrawalTransaction}},51117:function(e,t,n){const r=n(16139),o=n(12400),s=n(90652),i=n(1425),a=n(94386),c=n(71569),u=n(43219),p=n(67069);e.exports={LimitOrder:class{constructor(e,t,n,r,o,s,i){if(!Number.isSafeInteger(t)||t<0)throw Error("assetid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(n)||n<0)throw Error("ratn must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("ratd must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("minTrade must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const c=Buffer.from("ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=","base64"),p=[i,s,t,r,n,o,e],g=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS],l=u.inject(c,[5,7,9,10,11,12,16],p,g);this.programBytes=l;const d=new a.LogicSig(l,void 0);this.address=d.address(),this.owner=e,this.assetid=t}getProgram(){return this.programBytes}getAddress(){return this.address}},getSwapAssetsTransaction:function(e,t,n,u,g,l,d,m){const f=c.keyPairFromSecretKey(u),A=r.encodeAddress(f.publicKey),h=i.readProgram(e,void 0),y=h[0],b=h[1];let B;const S=y[6],T=r.encodeAddress(b[0]),U=a.makeLogicSig(e,void 0),x=U.address(),C=[o.makePaymentTxn(x,A,g,n,B,l,d,void 0,m,void 0),o.makeAssetTransferTxn(A,T,B,undefined,g,t,l,d,void 0,m,void 0,S)],D=s.assignGroupID(C),N=y[7],v=y[8];if(t*N<n*v)throw new Error(`bad payment ratio, ${t.toString()}*${N.toString()} !>= ${n.toString()}*${v.toString()}`);const I=y[4];if(n<I)throw new Error(`payment amount ${n.toString()} less than minimum trade ${I.toString()}`);const k=y[2];if(D[0].fee>k)throw new Error(`final fee of payment transaction ${D[0].fee.toString()} greater than transaction max fee ${k.toString()}`);if(D[1].fee>k)throw new Error(`final fee of asset transaction ${D[1].fee.toString()} greater than transaction max fee ${k.toString()}`);const E=a.signLogicSigTransactionObject(D[0],U),w=D[1].signTxn(u);return p.concatArrays(E.blob,w)}}},81360:function(e,t,n){const r=n(16139),o=n(12400),s=n(1425),i=n(94386),a=n(71569),c=n(43219);e.exports={PeriodicPayment:class{constructor(e,t,n,r,o,s,c){if(this.receiver=e,!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(this.amount=t,!Number.isSafeInteger(n)||n<0)throw Error("withdrawalWindow must be a positive number and smaller than 2^53-1");if(this.withdrawalWindow=n,!Number.isSafeInteger(r)||r<0)throw Error("period must be a positive number and smaller than 2^53-1");if(this.period=r,!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(this.expiryRound=o,!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");if(this.maxFee=s,void 0===c){const e=a.randomBytes(32);this.lease=Buffer.from(e).toString("base64")}else this.lease=c;this.programBytes=this.getProgram();const u=new i.LogicSig(this.programBytes,void 0);this.address=u.address()}getProgram(){const e=Buffer.from("ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ","base64"),t=[this.maxFee,this.period,this.withdrawalWindow,this.amount,this.expiryRound,this.lease,this.receiver],n=[c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.BASE64,c.valTypes.ADDRESS];return c.inject(e,[4,5,7,8,9,12,46],t,n)}getAddress(){return this.address}},getPeriodicPaymentWithdrawalTransaction:function(e,t,n,a){const c=s.readProgram(e,void 0),u=c[0],p=c[1],g=u[2],l=u[4],d=u[5];if(n%g!=0)throw new Error(`firstValid round ${n.toString()} was not a multiple of contract period ${g.toString()}`);const m=p[1],f=r.encodeAddress(m),A=p[0],h=new Uint8Array(A),y=n+l,b=f;let B,S;const T=i.makeLogicSig(e,void 0),U=T.address(),x={from:U,to:b,fee:t,amount:d,closeRemainderTo:B,firstRound:n,lastRound:y,note:S,genesisHash:a,genesisID:"",type:"pay",lease:h},C=o.makePaymentTxn(U,b,t,d,B,n,y,S,a,"");if(C.fee>u[1])throw new Error(`final fee of payment transaction${C.fee.toString()}greater than transaction max fee${u[1].toString()}`);return i.signLogicSigTransaction(x,T)}}},82680:function(e,t,n){const r=n(16139),o=n(12400),s=n(90652),i=n(94386),a=n(1425),c=n(43219),u=n(67069);e.exports={Split:class{constructor(e,t,n,r,o,s,a,u){if(!Number.isSafeInteger(o)||o<0)throw Error("rat2 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("rat1 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(a)||a<0)throw Error("minPay must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(u)||u<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const p=Buffer.from("ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=","base64"),g=[u,s,o,r,a,e,t,n],l=[c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.INT,c.valTypes.ADDRESS,c.valTypes.ADDRESS,c.valTypes.ADDRESS],d=c.inject(p,[4,7,8,9,10,14,47,80],g,l);this.programBytes=d;const m=i.makeLogicSig(d,void 0);this.address=m.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getSplitFundsTransaction:function(e,t,n,c,p,g){const l=a.readProgram(e,void 0),d=l[0],m=l[1];let f=d[6],A=d[5],h=0;const y=(e,t)=>{if("number"!=typeof e||"number"!=typeof t)throw new Error("gcd operates only on positive integers");return t?y(t,e%t):e},b=y(f,A);f=Math.floor(f/b),A=Math.floor(A/b);const B=A/f;h=Math.round(t/(1+B));const S=t-h;if(A*h!=f*S)throw Error("could not split funds in a way that satisfied the contract ratio");const T=i.makeLogicSig(e,void 0).address(),U=r.encodeAddress(m[1]),x=r.encodeAddress(m[2]),C=[o.makePaymentTxn(T,U,p,h,void 0,n,c,void 0,g),o.makePaymentTxn(T,x,p,S,void 0,n,c,void 0,g)],D=s.assignGroupID(C).map((e=>i.signLogicSigTransactionObject(e,i).blob));return u.concatArrays(D[0],D[1])}}},43219:function(e,t,n){const r=n(16139);function o(e,t){let n=0;for(;t>128;)e.push(255&t|128),t>>=7,n+=1;return e.push(255&t),n+1}const s={INT:1,ADDRESS:2,BASE64:3};e.exports={inject:function(e,t,n,i){if(t.length!==n.length||t.length!==i.length)throw new Error("Lengths do not match");let a=e;function c(e,t,n,r){const o=e.slice(0,n),s=e.slice(n+r,e.length),i=[o,Buffer.from(t),s];return Buffer.concat(i)}for(let e=0;e<t.length;e++){let u=0,p=n[e];switch(i[e]){case s.INT:const n=[];u=o(n,p),a=c(a,n,t[e],1);break;case s.ADDRESS:p=r.decodeAddress(p),a=c(a,p.publicKey,t[e],32);break;case s.BASE64:const i=[];p=Buffer.from(p,"base64"),o(i,p.length),p=Buffer.concat([Buffer.from(i),p]),a=c(a,p,t[e],33);break;default:throw new Error("unrecognized value type")}if(0!==u)for(let e=0;e<t.length;e++)t[e]+=u-1}return a},valTypes:s}},94386:function(e,t,n){"use strict";n.r(t),n.d(t,{LogicSig:function(){return p},LogicSigAccount:function(){return g},logicSigFromByte:function(){return f},makeLogicSig:function(){return l},sanityCheckProgram:function(){return u},signLogicSigTransaction:function(){return m},signLogicSigTransactionObject:function(){return d},tealSign:function(){return h},tealSignFromProgram:function(){return y}});var r=n(71569),o=n(16139),s=n(7783),i=n(19536),a=n(67069),c=n(93064);function u(e){if(!e||0===e.length)throw new Error("empty program");const t="\n".charCodeAt(0),n=" ".charCodeAt(0),r="~".charCodeAt(0);if(e.every((e=>e===t||(e=>n<=e&&e<=r)(e)))){const t=Buffer.from(e).toString();if((0,o.isValidAddress)(t))throw new Error("requesting program bytes, get Algorand address");if(Buffer.from(t,"base64").toString("base64")===t)throw new Error("program should not be b64 encoded");throw new Error("program bytes are all ASCII printable characters, not looking like Teal byte code")}}class p{constructor(e,t){if(this.tag=Buffer.from("Program"),t&&(!Array.isArray(t)||!t.every((e=>e.constructor===Uint8Array||Buffer.isBuffer(e)))))throw new TypeError("Invalid arguments");let n;null!=t&&(n=t.map((e=>new Uint8Array(e)))),u(e),this.logic=e,this.args=n,this.sig=void 0,this.msig=void 0}get_obj_for_encoding(){const e={l:this.logic};return this.args&&(e.arg=this.args),this.sig?e.sig=this.sig:this.msig&&(e.msig=this.msig),e}static from_obj_for_encoding(e){const t=new p(e.l,e.arg);return t.sig=e.sig,t.msig=e.msig,t}verify(e){if(this.sig&&this.msig)return!1;try{u(this.logic)}catch(e){return!1}const t=a.concatArrays(this.tag,this.logic);if(!this.sig&&!this.msig){const n=r.genericHash(t);return a.arrayEqual(n,e)}return this.sig?r.verify(t,this.sig,e):(0,i.F2)(t,this.msig,e)}address(){const e=a.concatArrays(this.tag,this.logic),t=r.genericHash(e);return o.encodeAddress(new Uint8Array(t))}sign(e,t){if(null==t)this.sig=this.signProgram(e);else{const n=t.addrs.map((e=>({pk:o.decodeAddress(e).publicKey})));this.msig={v:t.version,thr:t.threshold,subsig:n};const[r,s]=this.singleSignMultisig(e,this.msig);this.msig.subsig[s].s=r}}appendToMultisig(e){if(void 0===this.msig)throw new Error("no multisig present");const[t,n]=this.singleSignMultisig(e,this.msig);this.msig.subsig[n].s=t}signProgram(e){const t=a.concatArrays(this.tag,this.logic);return r.sign(t,e)}singleSignMultisig(e,t){let n=-1;const o=r.keyPairFromSecretKey(e).publicKey;for(let e=0;e<t.subsig.length;e++){const{pk:r}=t.subsig[e];if(a.arrayEqual(r,o)){n=e;break}}if(-1===n)throw new Error("invalid secret key");return[this.signProgram(e),n]}toByte(){return s.encode(this.get_obj_for_encoding())}static fromByte(e){const t=s.decode(e);return p.from_obj_for_encoding(t)}}class g{constructor(e,t){this.lsig=new p(e,t),this.sigkey=void 0}get_obj_for_encoding(){const e={lsig:this.lsig.get_obj_for_encoding()};return this.sigkey&&(e.sigkey=this.sigkey),e}static from_obj_for_encoding(e){const t=new g(e.lsig.l,e.lsig.arg);return t.lsig=p.from_obj_for_encoding(e.lsig),t.sigkey=e.sigkey,t}toByte(){return s.encode(this.get_obj_for_encoding())}static fromByte(e){const t=s.decode(e);return g.from_obj_for_encoding(t)}isDelegated(){return!(!this.lsig.sig&&!this.lsig.msig)}verify(){const e=this.address();return this.lsig.verify(o.decodeAddress(e).publicKey)}address(){if(this.lsig.sig&&this.lsig.msig)throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");if(this.lsig.sig){if(!this.sigkey)throw new Error("Signing key for delegated account is missing");return o.encodeAddress(this.sigkey)}if(this.lsig.msig){const e={version:this.lsig.msig.v,threshold:this.lsig.msig.thr,pks:this.lsig.msig.subsig.map((e=>e.pk))};return o.encodeAddress(o.fromMultisigPreImg(e))}return this.lsig.address()}signMultisig(e,t){this.lsig.sign(t,e)}appendToMultisig(e){this.lsig.appendToMultisig(e)}sign(e){this.lsig.sign(e),this.sigkey=r.keyPairFromSecretKey(e).publicKey}}function l(e,t){return new p(e,t)}function d(e,t){let n,i;if(t instanceof g)n=t.lsig,i=o.decodeAddress(t.address()).publicKey;else if(n=t,n.sig)i=e.from.publicKey;else if(n.msig){const e={version:n.msig.v,threshold:n.msig.thr,pks:n.msig.subsig.map((e=>e.pk))};i=o.fromMultisigPreImg(e)}else i=o.decodeAddress(n.address()).publicKey;return function(e,t,n){if(!t.verify(n))throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");const o={lsig:t.get_obj_for_encoding(),txn:e.get_obj_for_encoding()};return r.bytesEqual(n,e.from.publicKey)||(o.sgnr=Buffer.from(n)),{txID:e.txID().toString(),blob:s.encode(o)}}(e,n,i)}function m(e,t){return d(c.instantiateTxnIfNeeded(e),t)}function f(e){return p.fromByte(e)}const A=Buffer.from("ProgData");function h(e,t,n){const s=a.concatArrays(o.decodeAddress(n).publicKey,t),i=Buffer.from(a.concatArrays(A,s));return r.sign(i,e)}function y(e,t,n){return h(e,t,new p(n).address())}},95183:function(e,t,n){"use strict";n.r(t),n.d(t,{ABIAddressType:function(){return F.JQ},ABIArrayDynamicType:function(){return F._4},ABIArrayStaticType:function(){return F.X3},ABIBoolType:function(){return F.R0},ABIByteType:function(){return F.jD},ABIContract:function(){return F.Yh},ABIInterface:function(){return F.bL},ABIMethod:function(){return F.Ls},ABIReferenceType:function(){return F.UV},ABIStringType:function(){return F.Ax},ABITransactionType:function(){return F.A9},ABITupleType:function(){return F.w1},ABIType:function(){return F.NK},ABIUfixedType:function(){return F.RY},ABIUintType:function(){return F.Pu},ADDR_BYTE_SIZE:function(){return F.Vk},ALGORAND_MIN_TX_FEE:function(){return i.ALGORAND_MIN_TX_FEE},Algodv2:function(){return f.Z},AtomicTransactionComposer:function(){return R.A},AtomicTransactionComposerStatus:function(){return R.b},DryrunResult:function(){return k.x},ERROR_INVALID_MICROALGOS:function(){return Q},ERROR_MULTISIG_BAD_SENDER:function(){return j},INVALID_MICROALGOS_ERROR_MSG:function(){return p.rD},Indexer:function(){return y.Z},IntDecoding:function(){return h.Z},Kmd:function(){return A.Z},LENGTH_ENCODE_BYTE_SIZE:function(){return F.nh},LogicSigAccount:function(){return N.LogicSigAccount},LogicTemplates:function(){return W},MAX_LEN:function(){return F.kG},MULTISIG_BAD_SENDER_ERROR_MSG:function(){return G},OnApplicationComplete:function(){return E.OnApplicationComplete},SINGLE_BOOL_SIZE:function(){return F.qH},SINGLE_BYTE_SIZE:function(){return F.JH},SourceMap:function(){return I.Y},Transaction:function(){return i.Transaction},TransactionType:function(){return O.i},abiCheckTransactionType:function(){return F.vJ},abiTypeIsReference:function(){return F.o5},abiTypeIsTransaction:function(){return F.AE},algosToMicroalgos:function(){return p.HN},appendSignMultisigTransaction:function(){return v.PO},appendSignRawMultisigSignature:function(){return v.f7},assignGroupID:function(){return D.assignGroupID},bigIntToBytes:function(){return B.j},bytesToBigInt:function(){return B.v},computeGroupID:function(){return D.computeGroupID},createDryrun:function(){return k.P},createMultisigTransaction:function(){return v.gJ},decodeAddress:function(){return o.decodeAddress},decodeObj:function(){return K},decodeSignedTransaction:function(){return i.decodeSignedTransaction},decodeUint64:function(){return S.u},decodeUnsignedTransaction:function(){return i.decodeUnsignedTransaction},encodeAddress:function(){return o.encodeAddress},encodeObj:function(){return V},encodeUint64:function(){return S.T},encodeUnsignedTransaction:function(){return i.encodeUnsignedTransaction},generateAccount:function(){return T.Z},getApplicationAddress:function(){return o.getApplicationAddress},getMethodByName:function(){return F.I5},indexerModels:function(){return x},instantiateTxnIfNeeded:function(){return i.instantiateTxnIfNeeded},isTransactionWithSigner:function(){return w.Xw},isValidAddress:function(){return o.isValidAddress},logicSigFromByte:function(){return N.logicSigFromByte},makeApplicationCallTxnFromObject:function(){return E.makeApplicationCallTxnFromObject},makeApplicationClearStateTxn:function(){return E.makeApplicationClearStateTxn},makeApplicationClearStateTxnFromObject:function(){return E.makeApplicationClearStateTxnFromObject},makeApplicationCloseOutTxn:function(){return E.makeApplicationCloseOutTxn},makeApplicationCloseOutTxnFromObject:function(){return E.makeApplicationCloseOutTxnFromObject},makeApplicationCreateTxn:function(){return E.makeApplicationCreateTxn},makeApplicationCreateTxnFromObject:function(){return E.makeApplicationCreateTxnFromObject},makeApplicationDeleteTxn:function(){return E.makeApplicationDeleteTxn},makeApplicationDeleteTxnFromObject:function(){return E.makeApplicationDeleteTxnFromObject},makeApplicationNoOpTxn:function(){return E.makeApplicationNoOpTxn},makeApplicationNoOpTxnFromObject:function(){return E.makeApplicationNoOpTxnFromObject},makeApplicationOptInTxn:function(){return E.makeApplicationOptInTxn},makeApplicationOptInTxnFromObject:function(){return E.makeApplicationOptInTxnFromObject},makeApplicationUpdateTxn:function(){return E.makeApplicationUpdateTxn},makeApplicationUpdateTxnFromObject:function(){return E.makeApplicationUpdateTxnFromObject},makeAssetConfigTxn:function(){return E.makeAssetConfigTxn},makeAssetConfigTxnWithSuggestedParams:function(){return E.makeAssetConfigTxnWithSuggestedParams},makeAssetConfigTxnWithSuggestedParamsFromObject:function(){return E.makeAssetConfigTxnWithSuggestedParamsFromObject},makeAssetCreateTxn:function(){return E.makeAssetCreateTxn},makeAssetCreateTxnWithSuggestedParams:function(){return E.makeAssetCreateTxnWithSuggestedParams},makeAssetCreateTxnWithSuggestedParamsFromObject:function(){return E.makeAssetCreateTxnWithSuggestedParamsFromObject},makeAssetDestroyTxn:function(){return E.makeAssetDestroyTxn},makeAssetDestroyTxnWithSuggestedParams:function(){return E.makeAssetDestroyTxnWithSuggestedParams},makeAssetDestroyTxnWithSuggestedParamsFromObject:function(){return E.makeAssetDestroyTxnWithSuggestedParamsFromObject},makeAssetFreezeTxn:function(){return E.makeAssetFreezeTxn},makeAssetFreezeTxnWithSuggestedParams:function(){return E.makeAssetFreezeTxnWithSuggestedParams},makeAssetFreezeTxnWithSuggestedParamsFromObject:function(){return E.makeAssetFreezeTxnWithSuggestedParamsFromObject},makeAssetTransferTxn:function(){return E.makeAssetTransferTxn},makeAssetTransferTxnWithSuggestedParams:function(){return E.makeAssetTransferTxnWithSuggestedParams},makeAssetTransferTxnWithSuggestedParamsFromObject:function(){return E.makeAssetTransferTxnWithSuggestedParamsFromObject},makeBasicAccountTransactionSigner:function(){return w.x7},makeKeyRegistrationTxn:function(){return E.makeKeyRegistrationTxn},makeKeyRegistrationTxnWithSuggestedParams:function(){return E.makeKeyRegistrationTxnWithSuggestedParams},makeKeyRegistrationTxnWithSuggestedParamsFromObject:function(){return E.makeKeyRegistrationTxnWithSuggestedParamsFromObject},makeLogicSig:function(){return N.makeLogicSig},makeLogicSigAccountTransactionSigner:function(){return w.i1},makeMultiSigAccountTransactionSigner:function(){return w.Vj},makePaymentTxn:function(){return E.makePaymentTxn},makePaymentTxnWithSuggestedParams:function(){return E.makePaymentTxnWithSuggestedParams},makePaymentTxnWithSuggestedParamsFromObject:function(){return E.makePaymentTxnWithSuggestedParamsFromObject},masterDerivationKeyToMnemonic:function(){return C.vC},mergeMultisigTransactions:function(){return v.J6},microalgosToAlgos:function(){return p._},mnemonicFromSeed:function(){return C.w3},mnemonicToMasterDerivationKey:function(){return C.OF},mnemonicToSecretKey:function(){return C.Ch},modelsv2:function(){return U},multisigAddress:function(){return v.vH},secretKeyToMnemonic:function(){return C.QX},seedFromMnemonic:function(){return C.mE},signBid:function(){return P},signBytes:function(){return _},signLogicSigTransaction:function(){return N.signLogicSigTransaction},signLogicSigTransactionObject:function(){return N.signLogicSigTransactionObject},signMultisigTransaction:function(){return v.PU},signTransaction:function(){return L},tealSign:function(){return N.tealSign},tealSignFromProgram:function(){return N.tealSignFromProgram},verifyBytes:function(){return M},verifyMultisig:function(){return v.F2},waitForConfirmation:function(){return b.K}});var r=n(71569),o=n(16139),s=n(7783),i=n(93064),a=n(82637),c=n.n(a),u=n(38218),p=n(87970),g=n(67069),l=n(72346),d={};for(var m in l)["default","MULTISIG_BAD_SENDER_ERROR_MSG","signTransaction","signBid","signBytes","verifyBytes","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","Algodv2","Kmd","IntDecoding","Indexer","waitForConfirmation","isValidAddress","encodeAddress","decodeAddress","getApplicationAddress","bytesToBigInt","bigIntToBytes","encodeUint64","decodeUint64","generateAccount","modelsv2","indexerModels","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","secretKeyToMnemonic","mnemonicToSecretKey","seedFromMnemonic","mnemonicFromSeed","microalgosToAlgos","algosToMicroalgos","INVALID_MICROALGOS_ERROR_MSG","computeGroupID","assignGroupID","LogicSigAccount","makeLogicSig","signLogicSigTransaction","signLogicSigTransactionObject","logicSigFromByte","tealSign","tealSignFromProgram","signMultisigTransaction","mergeMultisigTransactions","appendSignMultisigTransaction","createMultisigTransaction","appendSignRawMultisigSignature","verifyMultisig","multisigAddress","SourceMap","LogicTemplates"].indexOf(m)<0&&(d[m]=function(e){return l[e]}.bind(0,m));n.d(t,d);var f=n(28738),A=n(41056),h=n(85606),y=n(81143),b=n(54739),B=n(65527),S=n(64059),T=n(35993),U=n(23733),x=n(56667),C=n(91283),D=n(90652),N=n(94386),v=n(19536),I=n(51310),k=n(11570),E=n(12400),w=n(5182),R=n(10596),O=n(89683),F=n(72356);const z=Buffer.from([77,88]),G="The transaction sender address and multisig preimage do not match.";function L(e,t){if(void 0===e.from){const n=r.keyPairFromSecretKey(t);e.from=o.encodeAddress(n.publicKey)}const n=i.instantiateTxnIfNeeded(e);return{txID:n.txID().toString(),blob:n.signTxn(t)}}function P(e,t){return new u.Z(e).signBid(t)}function _(e,t){const n=Buffer.from(g.concatArrays(z,e));return r.sign(n,t)}function M(e,t,n){const s=Buffer.from(g.concatArrays(z,e)),i=o.decodeAddress(n).publicKey;return r.verify(s,t,i)}function V(e){return new Uint8Array(s.encode(e))}function K(e){return s.decode(e)}const j=new Error(G),Q=new Error(p.rD),W=c()},12400:function(e,t,n){"use strict";n.r(t),n.d(t,{OnApplicationComplete:function(){return o.hq},makeApplicationCallTxnFromObject:function(){return M},makeApplicationClearStateTxn:function(){return G},makeApplicationClearStateTxnFromObject:function(){return L},makeApplicationCloseOutTxn:function(){return F},makeApplicationCloseOutTxnFromObject:function(){return z},makeApplicationCreateTxn:function(){return N},makeApplicationCreateTxnFromObject:function(){return v},makeApplicationDeleteTxn:function(){return E},makeApplicationDeleteTxnFromObject:function(){return w},makeApplicationNoOpTxn:function(){return P},makeApplicationNoOpTxnFromObject:function(){return _},makeApplicationOptInTxn:function(){return R},makeApplicationOptInTxnFromObject:function(){return O},makeApplicationUpdateTxn:function(){return I},makeApplicationUpdateTxnFromObject:function(){return k},makeAssetConfigTxn:function(){return A},makeAssetConfigTxnWithSuggestedParams:function(){return f},makeAssetConfigTxnWithSuggestedParamsFromObject:function(){return h},makeAssetCreateTxn:function(){return d},makeAssetCreateTxnWithSuggestedParams:function(){return l},makeAssetCreateTxnWithSuggestedParamsFromObject:function(){return m},makeAssetDestroyTxn:function(){return b},makeAssetDestroyTxnWithSuggestedParams:function(){return y},makeAssetDestroyTxnWithSuggestedParamsFromObject:function(){return B},makeAssetFreezeTxn:function(){return T},makeAssetFreezeTxnWithSuggestedParams:function(){return S},makeAssetFreezeTxnWithSuggestedParamsFromObject:function(){return U},makeAssetTransferTxn:function(){return C},makeAssetTransferTxnWithSuggestedParams:function(){return x},makeAssetTransferTxnWithSuggestedParamsFromObject:function(){return D},makeKeyRegistrationTxn:function(){return p},makeKeyRegistrationTxnWithSuggestedParams:function(){return u},makeKeyRegistrationTxnWithSuggestedParamsFromObject:function(){return g},makePaymentTxn:function(){return a},makePaymentTxnWithSuggestedParams:function(){return i},makePaymentTxnWithSuggestedParamsFromObject:function(){return c}});var r=n(93064),o=n(22459),s=n(54986);function i(e,t,n,o,i,a,c){const u={from:e,to:t,amount:n,closeRemainderTo:o,note:i,suggestedParams:a,type:s.i.pay,reKeyTo:c};return new r.Transaction(u)}function a(e,t,n,r,o,s,a,c,u,p,g){return i(e,t,r,o,c,{genesisHash:u,genesisID:p,firstRound:s,lastRound:a,fee:n},g)}function c(e){return i(e.from,e.to,e.amount,e.closeRemainderTo,e.note,e.suggestedParams,e.rekeyTo)}function u(e,t,n,o,i,a,c,u,p,g=!1,l=void 0){const d={from:e,note:t,voteKey:n,selectionKey:o,voteFirst:i,voteLast:a,voteKeyDilution:c,suggestedParams:u,type:s.i.keyreg,reKeyTo:p,nonParticipation:g,stateProofKey:l};return new r.Transaction(d)}function p(e,t,n,r,o,s,i,a,c,p,g,l,d,m=!1,f=void 0){return u(e,o,a,c,p,g,l,{genesisHash:s,genesisID:i,firstRound:n,lastRound:r,fee:t},d,m,f)}function g(e){return u(e.from,e.note,e.voteKey,e.selectionKey,e.voteFirst,e.voteLast,e.voteKeyDilution,e.suggestedParams,e.rekeyTo,e.nonParticipation,e.stateProofKey)}function l(e,t,n,o,i,a,c,u,p,g,l,d,m,f,A){const h={from:e,note:t,suggestedParams:f,assetTotal:n,assetDecimals:o,assetDefaultFrozen:i,assetUnitName:g,assetName:l,assetURL:d,assetMetadataHash:m,assetManager:a,assetReserve:c,assetFreeze:u,assetClawback:p,type:s.i.acfg,reKeyTo:A};return new r.Transaction(h)}function d(e,t,n,r,o,s,i,a,c,u,p,g,d,m,f,A,h,y,b){return l(e,o,a,c,u,p,g,d,m,f,A,h,y,{genesisHash:s,genesisID:i,firstRound:n,lastRound:r,fee:t},b)}function m(e){return l(e.from,e.note,e.total,e.decimals,e.defaultFrozen,e.manager,e.reserve,e.freeze,e.clawback,e.unitName,e.assetName,e.assetURL,e.assetMetadataHash,e.suggestedParams,e.rekeyTo)}function f(e,t,n,o,i,a,c,u,p=!0,g){if(p&&(void 0===o||void 0===i||void 0===a||void 0===c))throw Error("strict empty address checking was turned on, but at least one empty address was provided");const l={from:e,suggestedParams:u,assetIndex:n,assetManager:o,assetReserve:i,assetFreeze:a,assetClawback:c,type:s.i.acfg,note:t,reKeyTo:g};return new r.Transaction(l)}function A(e,t,n,r,o,s,i,a,c,u,p,g,l=!0,d){return f(e,o,a,c,u,p,g,{genesisHash:s,genesisID:i,firstRound:n,lastRound:r,fee:t},l,d)}function h(e){return f(e.from,e.note,e.assetIndex,e.manager,e.reserve,e.freeze,e.clawback,e.suggestedParams,e.strictEmptyAddressChecking,e.rekeyTo)}function y(e,t,n,o,i){const a={from:e,suggestedParams:o,assetIndex:n,type:s.i.acfg,note:t,reKeyTo:i};return new r.Transaction(a)}function b(e,t,n,r,o,s,i,a,c){return y(e,o,a,{genesisHash:s,genesisID:i,firstRound:n,lastRound:r,fee:t},c)}function B(e){return y(e.from,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function S(e,t,n,o,i,a,c){const u={from:e,type:s.i.afrz,freezeAccount:o,assetIndex:n,freezeState:i,note:t,suggestedParams:a,reKeyTo:c};return new r.Transaction(u)}function T(e,t,n,r,o,s,i,a,c,u,p){return S(e,o,a,c,u,{genesisHash:s,genesisID:i,firstRound:n,lastRound:r,fee:t},p)}function U(e){return S(e.from,e.note,e.assetIndex,e.freezeTarget,e.freezeState,e.suggestedParams,e.rekeyTo)}function x(e,t,n,o,i,a,c,u,p){const g={type:s.i.axfer,from:e,to:t,amount:i,suggestedParams:u,assetIndex:c,note:a,assetRevocationTarget:o,closeRemainderTo:n,reKeyTo:p};return new r.Transaction(g)}function C(e,t,n,r,o,s,i,a,c,u,p,g,l){return x(e,t,n,r,s,c,g,{genesisHash:u,genesisID:p,firstRound:i,lastRound:a,fee:o},l)}function D(e){return x(e.from,e.to,e.closeRemainderTo,e.revocationTarget,e.amount,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function N(e,t,n,o,i,a,c,u,p,g,l,d,m,f,A,h,y,b){const B={type:s.i.appl,from:e,suggestedParams:t,appIndex:0,appOnComplete:n,appLocalInts:a,appLocalByteSlices:c,appGlobalInts:u,appGlobalByteSlices:p,appApprovalProgram:o,appClearProgram:i,appArgs:g,appAccounts:l,appForeignApps:d,appForeignAssets:m,boxes:b,note:f,lease:A,reKeyTo:h,extraPages:y};return new r.Transaction(B)}function v(e){return N(e.from,e.suggestedParams,e.onComplete,e.approvalProgram,e.clearProgram,e.numLocalInts,e.numLocalByteSlices,e.numGlobalInts,e.numGlobalByteSlices,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.extraPages,e.boxes)}function I(e,t,n,i,a,c,u,p,g,l,d,m,f){const A={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appApprovalProgram:i,appOnComplete:o.hq.UpdateApplicationOC,appClearProgram:a,appArgs:c,appAccounts:u,appForeignApps:p,appForeignAssets:g,boxes:f,note:l,lease:d,reKeyTo:m};return new r.Transaction(A)}function k(e){return I(e.from,e.suggestedParams,e.appIndex,e.approvalProgram,e.clearProgram,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function E(e,t,n,i,a,c,u,p,g,l,d){const m={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appOnComplete:o.hq.DeleteApplicationOC,appArgs:i,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:p,lease:g,reKeyTo:l};return new r.Transaction(m)}function w(e){return E(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function R(e,t,n,i,a,c,u,p,g,l,d){const m={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appOnComplete:o.hq.OptInOC,appArgs:i,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:p,lease:g,reKeyTo:l};return new r.Transaction(m)}function O(e){return R(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function F(e,t,n,i,a,c,u,p,g,l,d){const m={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appOnComplete:o.hq.CloseOutOC,appArgs:i,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:p,lease:g,reKeyTo:l};return new r.Transaction(m)}function z(e){return F(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function G(e,t,n,i,a,c,u,p,g,l,d){const m={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appOnComplete:o.hq.ClearStateOC,appArgs:i,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:p,lease:g,reKeyTo:l};return new r.Transaction(m)}function L(e){return G(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function P(e,t,n,i,a,c,u,p,g,l,d){const m={type:s.i.appl,from:e,suggestedParams:t,appIndex:n,appOnComplete:o.hq.NoOpOC,appArgs:i,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:p,lease:g,reKeyTo:l};return new r.Transaction(m)}function _(e){return P(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function M(e){const t={type:s.i.appl,from:e.from,suggestedParams:e.suggestedParams,appIndex:e.appIndex,appOnComplete:e.onComplete,appLocalInts:e.numLocalInts,appLocalByteSlices:e.numLocalByteSlices,appGlobalInts:e.numGlobalInts,appGlobalByteSlices:e.numGlobalByteSlices,appApprovalProgram:e.approvalProgram,appClearProgram:e.clearProgram,appArgs:e.appArgs,appAccounts:e.accounts,appForeignApps:e.foreignApps,appForeignAssets:e.foreignAssets,boxes:e.boxes,note:e.note,lease:e.lease,reKeyTo:e.rekeyTo,extraPages:e.extraPages};return new r.Transaction(t)}}}]);