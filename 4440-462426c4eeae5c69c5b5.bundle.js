(self.webpackChunksmardex_web=self.webpackChunksmardex_web||[]).push([[4440],{38218:function(t,e,n){"use strict";n.d(e,{Z:function(){return i}});var a=n(16139),s=n(7783),r=n(71569),o=n(67069);class i{constructor({bidderKey:t,bidAmount:e,bidID:n,auctionKey:s,auctionID:r,maxPrice:o}){this.name="Bid",this.tag=Buffer.from([97,66]);const i=a.decodeAddress(t),c=a.decodeAddress(s);if(!Number.isSafeInteger(e)||e<0)throw Error("Bid amount must be positive and 2^53-1");if(!Number.isSafeInteger(n)||n<0)throw Error("BidID must be positive and 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("auctionID must be positive");Object.assign(this,{bidderKey:i,bidAmount:e,bidID:n,auctionKey:c,auctionID:r,maxPrice:o})}get_obj_for_encoding(){return{bidder:Buffer.from(this.bidderKey.publicKey),cur:this.bidAmount,price:this.maxPrice,id:this.bidID,auc:Buffer.from(this.auctionKey.publicKey),aid:this.auctionID}}signBid(t){const e=s.encode(this.get_obj_for_encoding()),n=Buffer.from(o.concatArrays(this.tag,e)),a=r.sign(n,t),i={t:"b",b:{sig:Buffer.from(a),bid:this.get_obj_for_encoding()}};return new Uint8Array(s.encode(i))}}},26828:function(t,e,n){"use strict";function a(t,e,n){return null==t?[]:t.map((t=>function(t,e,n){const a=t.appIndex,s=t.name,r=0===a||a===n;let o=0;if(null!=e&&(o=e.indexOf(a)+1),0===o&&!r)throw new Error(`Box ref with appId ${a} not in foreign-apps`);return{i:o,n:s}}(t,e,n)))}n.d(e,{G:function(){return a}})},72346:function(t,e,n){const{default:a}=n(11549),{setSendTransactionHeaders:s}=n(64803);t.exports={Algod:function(t="",e="http://r2.algorand.network",n=4180,r={}){let o=t;"string"==typeof o&&(o={"X-Algo-API-Token":o});const i=new a(o,e,n,r);function c(t){return void 0!==t.noteb64&&null!==t.noteb64&&(t.note=Buffer.from(t.noteb64,"base64")),t}this.status=async(t={})=>(await i.get("/v1/status",{},t)).body,this.healthCheck=async(t={})=>{const e=await i.get("/health",{},t);if(!e.ok)throw new Error(`Health response: ${e.status}`);return{}},this.statusAfterBlock=async(t,e={})=>{if(!Number.isInteger(t))throw Error("roundNumber should be an integer");return(await i.get(`/v1/status/wait-for-block-after/${t}`,{},e)).body},this.pendingTransactions=async(t,e={})=>{if(!Number.isInteger(t))throw Error("maxTxns should be an integer");const n=await i.get("/v1/transactions/pending",{max:t},e);if(200===n.statusCode&&void 0!==n.body.truncatedTxns.transactions)for(let t=0;t<n.body.truncatedTxns.transactions.length;t++)n.body.truncatedTxns.transactions[t]=c(n.body.truncatedTxns.transactions[t]);return n.body},this.versions=async(t={})=>(await i.get("/versions",{},t)).body,this.ledgerSupply=async(t={})=>(await i.get("/v1/ledger/supply",{},t)).body,this.transactionByAddress=async(t,e=null,n=null,a=null,s={})=>{if(null!==e&&!Number.isInteger(e))throw Error("first round should be an integer");if(null!==n&&!Number.isInteger(n))throw Error("last round should be an integer");const r=await i.get(`/v1/account/${t}/transactions`,{firstRound:e,lastRound:n,max:a},s);if(200===r.statusCode&&void 0!==r.body.transactions)for(let t=0;t<r.body.transactions.length;t++)r.body.transactions[t]=c(r.body.transactions[t]);return r.body},this.transactionByAddressAndDate=async(t,e,n,a=null,s={})=>{const r=await i.get(`/v1/account/${t}/transactions`,{fromDate:e,toDate:n,max:a},s);if(200===r.statusCode&&void 0!==r.body.transactions)for(let t=0;t<r.body.transactions.length;t++)r.body.transactions[t]=c(r.body.transactions[t]);return r.body},this.transactionById=async(t,e={})=>{const n=await i.get(`/v1/transaction/${t}`,{},e);return 200===n.statusCode&&(n.body=c(n.body)),n.body},this.transactionInformation=async(t,e,n={})=>{const a=await i.get(`/v1/account/${t}/transaction/${e}`,{},n);return 200===a.statusCode&&(a.body=c(a.body)),a.body},this.pendingTransactionInformation=async(t,e={})=>{const n=await i.get(`/v1/transactions/pending/${t}`,{},e);return 200===n.statusCode&&(n.body=c(n.body)),n.body},this.accountInformation=async(t,e={})=>(await i.get(`/v1/account/${t}`,{},e)).body,this.assetInformation=async(t,e={})=>(await i.get(`/v1/asset/${t}`,{},e)).body,this.suggestedFee=async(t={})=>(await i.get("/v1/transactions/fee",{},t)).body,this.sendRawTransaction=async(t,e={})=>{const n=s(e);return(await i.post("/v1/transactions",Buffer.from(t),n)).body},this.sendRawTransactions=async(t,e={})=>{const n=s(e),a=Array.prototype.concat(...t.map((t=>Array.from(t))));return(await i.post("/v1/transactions",Buffer.from(a),n)).body},this.getTransactionParams=async(t={})=>(await i.get("/v1/transactions/params",{},t)).body,this.suggestParams=async(t={})=>{const e=await this.getTransactionParams(t);return{flatFee:!1,fee:e.fee,firstRound:e.lastRound,lastRound:e.lastRound+1e3,genesisID:e.genesisID,genesisHash:e.genesishashb64}},this.block=async(t,e={})=>{if(!Number.isInteger(t))throw Error("roundNumber should be an integer");const n=await i.get(`/v1/block/${t}`,{},e);if(200===n.statusCode&&void 0!==n.body.txns.transactions)for(let t=0;t<n.body.txns.transactions.length;t++)n.body.txns.transactions[t]=c(n.body.txns.transactions[t]);return n.body}}}},11549:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return o}});var a=n(67069),s=n(73052);function r(t){return Object.keys(t).reduce(((e,n)=>(e[n.toLowerCase()]=t[n],e)),{})}class o{constructor(t,e,n,a={}){this.bc=void 0!==e?new s.E(t,e,n,a):t}static parseJSON(t,e,n={}){try{return 0===Object.keys(n).length?t&&JSON.parse(t):t&&a.parseJSON(t,n)}catch(n){const a=n;throw a.rawResponse=t||null,a.statusCode=e,a}}static serializeData(t,e){if(!t)return new Uint8Array(0);if("application/json"===e["content-type"])return new Uint8Array(Buffer.from(JSON.stringify(t)));if("string"==typeof t)return new Uint8Array(Buffer.from(t));if(t instanceof Uint8Array)return t;throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json")}static prepareResponse(t,e,n,a={}){let s,{body:r}=t;return"application/msgpack"!==e&&(s=r&&Buffer.from(r).toString()||""),n&&"application/json"===e&&(r=o.parseJSON(s,t.status,a)),{...t,body:r,text:s,ok:2===Math.trunc(t.status/100)}}static prepareResponseError(t){return t.response&&(t.response=o.prepareResponse(t.response,"application/json",!0),t.status=t.response.status),t}async get(t,e,n={},a={},s=!0){const r=function(t){return void 0!==t&&Object.prototype.hasOwnProperty.call(t,"format")&&"msgpack"===t.format?"application/msgpack":"application/json"}(e),i={...n,accept:r};try{const n=await this.bc.get(t,function(t){for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&(t[e]&&0!==t[e].length||delete t[e]);return t}(e),i);return o.prepareResponse(n,r,s,a)}catch(t){throw o.prepareResponseError(t)}}async post(t,e,n={},a,s=!0){const i={"content-type":"application/json",...r(n)};try{const n=await this.bc.post(t,o.serializeData(e,i),a,i);return o.prepareResponse(n,"application/json",s)}catch(t){throw o.prepareResponseError(t)}}async delete(t,e,n={},a=!0){const s={"content-type":"application/json",...r(n)},i=await this.bc.delete(t,o.serializeData(e,s),void 0,s);return o.prepareResponse(i,"application/json",a)}}},41056:function(t,e,n){"use strict";n.d(e,{Z:function(){return r}});var a=n(78),s=n(93064);class r extends a.Z{constructor(t,e="http://127.0.0.1",n=7833,a={}){super("X-KMD-API-Token",t,e,n,a)}async versions(){return(await this.c.get("/versions")).body}async listWallets(){return(await this.c.get("/v1/wallets")).body}async createWallet(t,e,n=new Uint8Array,a="sqlite"){const s={wallet_name:t,wallet_driver_name:a,wallet_password:e,master_derivation_key:Buffer.from(n).toString("base64")};return(await this.c.post("/v1/wallet",s)).body}async initWalletHandle(t,e){const n={wallet_id:t,wallet_password:e};return(await this.c.post("/v1/wallet/init",n)).body}async releaseWalletHandle(t){const e={wallet_handle_token:t};return(await this.c.post("/v1/wallet/release",e)).body}async renewWalletHandle(t){const e={wallet_handle_token:t};return(await this.c.post("/v1/wallet/renew",e)).body}async renameWallet(t,e,n){const a={wallet_id:t,wallet_password:e,wallet_name:n};return(await this.c.post("/v1/wallet/rename",a)).body}async getWallet(t){const e={wallet_handle_token:t};return(await this.c.post("/v1/wallet/info",e)).body}async exportMasterDerivationKey(t,e){const n={wallet_handle_token:t,wallet_password:e},a=await this.c.post("/v1/master-key/export",n);return{master_derivation_key:Buffer.from(a.body.master_derivation_key,"base64")}}async importKey(t,e){const n={wallet_handle_token:t,private_key:Buffer.from(e).toString("base64")};return(await this.c.post("/v1/key/import",n)).body}async exportKey(t,e,n){const a={wallet_handle_token:t,address:n,wallet_password:e},s=await this.c.post("/v1/key/export",a);return{private_key:Buffer.from(s.body.private_key,"base64")}}async generateKey(t){const e={wallet_handle_token:t,display_mnemonic:!1};return(await this.c.post("/v1/key",e)).body}async deleteKey(t,e,n){const a={wallet_handle_token:t,address:n,wallet_password:e};return(await this.c.delete("/v1/key",a)).body}async listKeys(t){const e={wallet_handle_token:t};return(await this.c.post("/v1/key/list",e)).body}async signTransaction(t,e,n){const a=s.instantiateTxnIfNeeded(n),r={wallet_handle_token:t,wallet_password:e,transaction:Buffer.from(a.toByte()).toString("base64")},o=await this.c.post("/v1/transaction/sign",r);return 200===o.status?Buffer.from(o.body.signed_transaction,"base64"):o.body}async signTransactionWithSpecificPublicKey(t,e,n,a){const r=s.instantiateTxnIfNeeded(n),o={wallet_handle_token:t,wallet_password:e,transaction:Buffer.from(r.toByte()).toString("base64"),public_key:Buffer.from(a).toString("base64")},i=await this.c.post("/v1/transaction/sign",o);return 200===i.status?Buffer.from(i.body.signed_transaction,"base64"):i.body}async listMultisig(t){const e={wallet_handle_token:t};return(await this.c.post("/v1/multisig/list",e)).body}async importMultisig(t,e,n,a){const s={wallet_handle_token:t,multisig_version:e,threshold:n,pks:a};return(await this.c.post("/v1/multisig/import",s)).body}async exportMultisig(t,e){const n={wallet_handle_token:t,address:e};return(await this.c.post("/v1/multisig/export",n)).body}async signMultisigTransaction(t,e,n,a,r){const o=s.instantiateTxnIfNeeded(n),i={wallet_handle_token:t,transaction:Buffer.from(o.toByte()).toString("base64"),public_key:Buffer.from(a).toString("base64"),partial_multisig:r,wallet_password:e};return(await this.c.post("/v1/multisig/sign",i)).body}async deleteMultisig(t,e,n){const a={wallet_handle_token:t,address:n,wallet_password:e};return(await this.c.delete("/v1/multisig",a)).body}}}}]);